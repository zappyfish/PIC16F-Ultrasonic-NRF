

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri May 19 03:00:47 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.41
    26                           ; Generated 25/01/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F1503 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000E                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  008C                     	;# 
    86  008E                     	;# 
    87  0091                     	;# 
    88  0092                     	;# 
    89  0093                     	;# 
    90  0095                     	;# 
    91  0096                     	;# 
    92  0097                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009B                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010E                     	;# 
   103  0111                     	;# 
   104  0112                     	;# 
   105  0113                     	;# 
   106  0114                     	;# 
   107  0115                     	;# 
   108  0116                     	;# 
   109  0117                     	;# 
   110  0118                     	;# 
   111  0119                     	;# 
   112  011D                     	;# 
   113  018C                     	;# 
   114  018E                     	;# 
   115  0191                     	;# 
   116  0191                     	;# 
   117  0192                     	;# 
   118  0193                     	;# 
   119  0193                     	;# 
   120  0194                     	;# 
   121  0195                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  020C                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0391                     	;# 
   141  0392                     	;# 
   142  0393                     	;# 
   143  0498                     	;# 
   144  0498                     	;# 
   145  0499                     	;# 
   146  049A                     	;# 
   147  049B                     	;# 
   148  049B                     	;# 
   149  049C                     	;# 
   150  049D                     	;# 
   151  049E                     	;# 
   152  049F                     	;# 
   153  0611                     	;# 
   154  0612                     	;# 
   155  0613                     	;# 
   156  0613                     	;# 
   157  0614                     	;# 
   158  0615                     	;# 
   159  0616                     	;# 
   160  0616                     	;# 
   161  0617                     	;# 
   162  0618                     	;# 
   163  0619                     	;# 
   164  0619                     	;# 
   165  061A                     	;# 
   166  061B                     	;# 
   167  061C                     	;# 
   168  061C                     	;# 
   169  0691                     	;# 
   170  0692                     	;# 
   171  0693                     	;# 
   172  0694                     	;# 
   173  0695                     	;# 
   174  0F0F                     	;# 
   175  0F10                     	;# 
   176  0F11                     	;# 
   177  0F12                     	;# 
   178  0F13                     	;# 
   179  0F14                     	;# 
   180  0F15                     	;# 
   181  0F16                     	;# 
   182  0F17                     	;# 
   183  0F18                     	;# 
   184  0F19                     	;# 
   185  0F1A                     	;# 
   186  0F1B                     	;# 
   187  0F1C                     	;# 
   188  0F1D                     	;# 
   189  0F1E                     	;# 
   190  0F1F                     	;# 
   191  0FE3                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000E                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001C                     	;# 
   229  008C                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0099                     	;# 
   238  009A                     	;# 
   239  009B                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  010E                     	;# 
   247  0111                     	;# 
   248  0112                     	;# 
   249  0113                     	;# 
   250  0114                     	;# 
   251  0115                     	;# 
   252  0116                     	;# 
   253  0117                     	;# 
   254  0118                     	;# 
   255  0119                     	;# 
   256  011D                     	;# 
   257  018C                     	;# 
   258  018E                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0194                     	;# 
   265  0195                     	;# 
   266  0196                     	;# 
   267  0197                     	;# 
   268  020C                     	;# 
   269  0211                     	;# 
   270  0211                     	;# 
   271  0212                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0213                     	;# 
   275  0214                     	;# 
   276  0214                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0216                     	;# 
   281  0216                     	;# 
   282  0217                     	;# 
   283  0217                     	;# 
   284  0391                     	;# 
   285  0392                     	;# 
   286  0393                     	;# 
   287  0498                     	;# 
   288  0498                     	;# 
   289  0499                     	;# 
   290  049A                     	;# 
   291  049B                     	;# 
   292  049B                     	;# 
   293  049C                     	;# 
   294  049D                     	;# 
   295  049E                     	;# 
   296  049F                     	;# 
   297  0611                     	;# 
   298  0612                     	;# 
   299  0613                     	;# 
   300  0613                     	;# 
   301  0614                     	;# 
   302  0615                     	;# 
   303  0616                     	;# 
   304  0616                     	;# 
   305  0617                     	;# 
   306  0618                     	;# 
   307  0619                     	;# 
   308  0619                     	;# 
   309  061A                     	;# 
   310  061B                     	;# 
   311  061C                     	;# 
   312  061C                     	;# 
   313  0691                     	;# 
   314  0692                     	;# 
   315  0693                     	;# 
   316  0694                     	;# 
   317  0695                     	;# 
   318  0F0F                     	;# 
   319  0F10                     	;# 
   320  0F11                     	;# 
   321  0F12                     	;# 
   322  0F13                     	;# 
   323  0F14                     	;# 
   324  0F15                     	;# 
   325  0F16                     	;# 
   326  0F17                     	;# 
   327  0F18                     	;# 
   328  0F19                     	;# 
   329  0F1A                     	;# 
   330  0F1B                     	;# 
   331  0F1C                     	;# 
   332  0F1D                     	;# 
   333  0F1E                     	;# 
   334  0F1F                     	;# 
   335  0FE3                     	;# 
   336  0FE4                     	;# 
   337  0FE5                     	;# 
   338  0FE6                     	;# 
   339  0FE7                     	;# 
   340  0FE8                     	;# 
   341  0FE9                     	;# 
   342  0FEA                     	;# 
   343  0FEB                     	;# 
   344  0FED                     	;# 
   345  0FEE                     	;# 
   346  0FEF                     	;# 
   347  0000                     	;# 
   348  0001                     	;# 
   349  0002                     	;# 
   350  0003                     	;# 
   351  0004                     	;# 
   352  0005                     	;# 
   353  0006                     	;# 
   354  0007                     	;# 
   355  0008                     	;# 
   356  0009                     	;# 
   357  000A                     	;# 
   358  000B                     	;# 
   359  000C                     	;# 
   360  000E                     	;# 
   361  0011                     	;# 
   362  0012                     	;# 
   363  0013                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0016                     	;# 
   367  0017                     	;# 
   368  0018                     	;# 
   369  0019                     	;# 
   370  001A                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  008C                     	;# 
   374  008E                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0099                     	;# 
   382  009A                     	;# 
   383  009B                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  010C                     	;# 
   390  010E                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0113                     	;# 
   394  0114                     	;# 
   395  0115                     	;# 
   396  0116                     	;# 
   397  0117                     	;# 
   398  0118                     	;# 
   399  0119                     	;# 
   400  011D                     	;# 
   401  018C                     	;# 
   402  018E                     	;# 
   403  0191                     	;# 
   404  0191                     	;# 
   405  0192                     	;# 
   406  0193                     	;# 
   407  0193                     	;# 
   408  0194                     	;# 
   409  0195                     	;# 
   410  0196                     	;# 
   411  0197                     	;# 
   412  020C                     	;# 
   413  0211                     	;# 
   414  0211                     	;# 
   415  0212                     	;# 
   416  0212                     	;# 
   417  0213                     	;# 
   418  0213                     	;# 
   419  0214                     	;# 
   420  0214                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0216                     	;# 
   425  0216                     	;# 
   426  0217                     	;# 
   427  0217                     	;# 
   428  0391                     	;# 
   429  0392                     	;# 
   430  0393                     	;# 
   431  0498                     	;# 
   432  0498                     	;# 
   433  0499                     	;# 
   434  049A                     	;# 
   435  049B                     	;# 
   436  049B                     	;# 
   437  049C                     	;# 
   438  049D                     	;# 
   439  049E                     	;# 
   440  049F                     	;# 
   441  0611                     	;# 
   442  0612                     	;# 
   443  0613                     	;# 
   444  0613                     	;# 
   445  0614                     	;# 
   446  0615                     	;# 
   447  0616                     	;# 
   448  0616                     	;# 
   449  0617                     	;# 
   450  0618                     	;# 
   451  0619                     	;# 
   452  0619                     	;# 
   453  061A                     	;# 
   454  061B                     	;# 
   455  061C                     	;# 
   456  061C                     	;# 
   457  0691                     	;# 
   458  0692                     	;# 
   459  0693                     	;# 
   460  0694                     	;# 
   461  0695                     	;# 
   462  0F0F                     	;# 
   463  0F10                     	;# 
   464  0F11                     	;# 
   465  0F12                     	;# 
   466  0F13                     	;# 
   467  0F14                     	;# 
   468  0F15                     	;# 
   469  0F16                     	;# 
   470  0F17                     	;# 
   471  0F18                     	;# 
   472  0F19                     	;# 
   473  0F1A                     	;# 
   474  0F1B                     	;# 
   475  0F1C                     	;# 
   476  0F1D                     	;# 
   477  0F1E                     	;# 
   478  0F1F                     	;# 
   479  0FE3                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491                           
   492                           	psect	stringtext
   493  0469                     __pstringtext:	
   494  0469                     _RX_PW_P:	
   495  0469  3411               	retlw	17
   496  046A  3412               	retlw	18
   497  046B  3413               	retlw	19
   498  046C  3414               	retlw	20
   499  046D  3415               	retlw	21
   500  046E  3416               	retlw	22
   501  046F                     __end_of_RX_PW_P:	
   502  046F                     _RX_ADDR_P:	
   503  046F  340A               	retlw	10
   504  0470  340B               	retlw	11
   505  0471  340C               	retlw	12
   506  0472  340D               	retlw	13
   507  0473  340E               	retlw	14
   508  0474  340F               	retlw	15
   509  0475                     __end_of_RX_ADDR_P:	
   510  0475                     _TX_ADDR:	
   511  0475  3410               	retlw	16
   512  0476                     __end_of_TX_ADDR:	
   513  001C                     _T2CON	set	28
   514  001B                     _PR2	set	27
   515  000C                     _PORTAbits	set	12
   516  0011                     _PIR1bits	set	17
   517  0017                     _TMR1H	set	23
   518  0016                     _TMR1L	set	22
   519  0018                     _T1CON	set	24
   520  0095                     _OPTION_REGbits	set	149
   521  008E                     _TRISCbits	set	142
   522  0099                     _OSCCON	set	153
   523  008C                     _TRISAbits	set	140
   524  010E                     _LATCbits	set	270
   525  011D                     _APFCON	set	285
   526  010C                     _LATAbits	set	268
   527  018C                     _ANSELA	set	396
   528  018E                     _ANSELC	set	398
   529  0211                     _SSP1BUF	set	529
   530  0214                     _SSP1STATbits	set	532
   531  0215                     _SSP1CON1bits	set	533
   532  020C                     _WPUAbits	set	524
   533  0617                     _PWM3DCL	set	1559
   534  0618                     _PWM3DCH	set	1560
   535  0619                     _PWM3CON	set	1561
   536                           
   537                           ; #config settings
   538  0000                     
   539                           	psect	cinit
   540  07FE                     start_initialization:	
   541  07FE                     __initialization:	
   542  07FE                     end_of_initialization:	
   543                           ;End of C runtime variable initialization code
   544                           
   545  07FE                     __end_of__initialization:	
   546  07FE  0020               	movlb	0
   547  07FF  2D18               	ljmp	_main	;jump to C main() function
   548                           
   549                           	psect	cstackCOMMON
   550  0070                     __pcstackCOMMON:	
   551  0070                     ?_configureRX:	
   552  0070                     ?_readData:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_setDutyCycle:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_configIO:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ??_configIO:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_SPI_init:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ??_SPI_init:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_SPI_write_byte:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ??_SPI_write_byte:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_resetIRQ:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_main:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?___ftpack:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     setDutyCycle@dc:	
   586                           ; 3 bytes @ 0x0
   587                           
   588  0070                     ___ftpack@arg:	
   589                           ; 2 bytes @ 0x0
   590                           
   591                           
   592                           ; 3 bytes @ 0x0
   593  0070                     	ds	1
   594  0071                     SPI_write_byte@data:	
   595                           
   596                           ; 1 bytes @ 0x1
   597  0071                     	ds	1
   598  0072                     ??_setDutyCycle:	
   599  0072                     SPI_write_byte@ret_data:	
   600                           ; 1 bytes @ 0x2
   601                           
   602                           
   603                           ; 1 bytes @ 0x2
   604  0072                     	ds	1
   605  0073                     ??_readData:	
   606  0073                     ?_SPI_writeArray:	
   607                           ; 1 bytes @ 0x3
   608                           
   609  0073                     SPI_writeArray@length:	
   610                           ; 1 bytes @ 0x3
   611                           
   612  0073                     ___ftpack@exp:	
   613                           ; 1 bytes @ 0x3
   614                           
   615                           
   616                           ; 1 bytes @ 0x3
   617  0073                     	ds	1
   618  0074                     ??_SPI_writeArray:	
   619  0074                     readData@ret:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0074                     ___ftpack@sign:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     setDutyCycle@masked:	
   626                           ; 1 bytes @ 0x4
   627                           
   628                           
   629                           ; 2 bytes @ 0x4
   630  0074                     	ds	1
   631  0075                     ??___ftpack:	
   632                           
   633                           ; 1 bytes @ 0x5
   634  0075                     	ds	1
   635  0076                     ?_configLEDTimer:	
   636  0076                     SPI_writeArray@ret:	
   637                           ; 1 bytes @ 0x6
   638                           
   639  0076                     configLEDTimer@dc:	
   640                           ; 1 bytes @ 0x6
   641                           
   642                           
   643                           ; 2 bytes @ 0x6
   644  0076                     	ds	1
   645  0077                     SPI_writeArray@i:	
   646                           
   647                           ; 1 bytes @ 0x7
   648  0077                     	ds	1
   649  0078                     ??_configLEDTimer:	
   650  0078                     ?___lbtoft:	
   651                           ; 1 bytes @ 0x8
   652                           
   653  0078                     SPI_writeArray@data:	
   654                           ; 3 bytes @ 0x8
   655                           
   656                           
   657                           ; 1 bytes @ 0x8
   658  0078                     	ds	1
   659  0079                     ??_configureRX:	
   660  0079                     ??_resetIRQ:	
   661                           ; 1 bytes @ 0x9
   662                           
   663                           
   664                           ; 1 bytes @ 0x9
   665  0079                     	ds	1
   666  007A                     resetIRQ@write:	
   667  007A                     configureRX@write:	
   668                           ; 2 bytes @ 0xA
   669                           
   670                           
   671                           ; 2 bytes @ 0xA
   672  007A                     	ds	1
   673  007B                     ___lbtoft@c:	
   674                           
   675                           ; 1 bytes @ 0xB
   676  007B                     	ds	1
   677  007C                     ??_main:	
   678                           
   679                           ; 1 bytes @ 0xC
   680  007C                     	ds	1
   681                           
   682                           	psect	cstackBANK0
   683  0020                     __pcstackBANK0:	
   684  0020                     ??___lbtoft:	
   685                           
   686                           ; 1 bytes @ 0x0
   687  0020                     	ds	4
   688  0024                     ?___ftdiv:	
   689  0024                     ___ftdiv@f2:	
   690                           ; 3 bytes @ 0x4
   691                           
   692                           
   693                           ; 3 bytes @ 0x4
   694  0024                     	ds	3
   695  0027                     ___ftdiv@f1:	
   696                           
   697                           ; 3 bytes @ 0x7
   698  0027                     	ds	3
   699  002A                     ??___ftdiv:	
   700                           
   701                           ; 1 bytes @ 0xA
   702  002A                     	ds	4
   703  002E                     ___ftdiv@cntr:	
   704                           
   705                           ; 1 bytes @ 0xE
   706  002E                     	ds	1
   707  002F                     ___ftdiv@f3:	
   708                           
   709                           ; 3 bytes @ 0xF
   710  002F                     	ds	3
   711  0032                     ___ftdiv@exp:	
   712                           
   713                           ; 1 bytes @ 0x12
   714  0032                     	ds	1
   715  0033                     ___ftdiv@sign:	
   716                           
   717                           ; 1 bytes @ 0x13
   718  0033                     	ds	1
   719  0034                     ?___ftmul:	
   720  0034                     ___ftmul@f1:	
   721                           ; 3 bytes @ 0x14
   722                           
   723                           
   724                           ; 3 bytes @ 0x14
   725  0034                     	ds	3
   726  0037                     ___ftmul@f2:	
   727                           
   728                           ; 3 bytes @ 0x17
   729  0037                     	ds	3
   730  003A                     ??___ftmul:	
   731                           
   732                           ; 1 bytes @ 0x1A
   733  003A                     	ds	4
   734  003E                     ___ftmul@exp:	
   735                           
   736                           ; 1 bytes @ 0x1E
   737  003E                     	ds	1
   738  003F                     ___ftmul@f3_as_product:	
   739                           
   740                           ; 3 bytes @ 0x1F
   741  003F                     	ds	3
   742  0042                     ___ftmul@cntr:	
   743                           
   744                           ; 1 bytes @ 0x22
   745  0042                     	ds	1
   746  0043                     ___ftmul@sign:	
   747                           
   748                           ; 1 bytes @ 0x23
   749  0043                     	ds	1
   750  0044                     ?___fttol:	
   751  0044                     ___fttol@f1:	
   752                           ; 4 bytes @ 0x24
   753                           
   754                           
   755                           ; 3 bytes @ 0x24
   756  0044                     	ds	4
   757  0048                     ??___fttol:	
   758                           
   759                           ; 1 bytes @ 0x28
   760  0048                     	ds	4
   761  004C                     ___fttol@sign1:	
   762                           
   763                           ; 1 bytes @ 0x2C
   764  004C                     	ds	1
   765  004D                     ___fttol@lval:	
   766                           
   767                           ; 4 bytes @ 0x2D
   768  004D                     	ds	4
   769  0051                     ___fttol@exp1:	
   770                           
   771                           ; 1 bytes @ 0x31
   772  0051                     	ds	1
   773  0052                     main@dc:	
   774                           
   775                           ; 2 bytes @ 0x32
   776  0052                     	ds	2
   777  0054                     main@data:	
   778                           
   779                           ; 1 bytes @ 0x34
   780  0054                     	ds	1
   781                           
   782                           	psect	maintext
   783  0518                     __pmaintext:	
   784 ;;
   785 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   786 ;;
   787 ;; *************** function _main *****************
   788 ;; Defined at:
   789 ;;		line 54 in file "receiver.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  dc              2   50[BANK0 ] unsigned int 
   794 ;;  data            1   52[BANK0 ] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : B1F/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMMON   BANK0   BANK1
   804 ;;      Params:         0       0       0
   805 ;;      Locals:         0       3       0
   806 ;;      Temps:          1       0       0
   807 ;;      Totals:         1       3       0
   808 ;;Total ram usage:        4 bytes
   809 ;; Hardware stack levels required when called:    3
   810 ;; This function calls:
   811 ;;		_SPI_init
   812 ;;		___ftdiv
   813 ;;		___ftmul
   814 ;;		___fttol
   815 ;;		___lbtoft
   816 ;;		_configLEDTimer
   817 ;;		_configureRX
   818 ;;		_readData
   819 ;;		_resetIRQ
   820 ;;		_setDutyCycle
   821 ;; This function is called by:
   822 ;;		Startup code after reset
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _main
   828  0518                     _main:	
   829                           
   830                           ;receiver.c: 55: SPI_init();
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   834  0518  2476               	fcall	_SPI_init
   835                           
   836                           ;receiver.c: 56: configLEDTimer(0x0FF);
   837  0519  30FF               	movlw	255
   838  051A  00F6               	movwf	configLEDTimer@dc
   839  051B  3000               	movlw	0
   840  051C  00F7               	movwf	configLEDTimer@dc+1
   841  051D  24CC               	fcall	_configLEDTimer
   842                           
   843                           ;receiver.c: 57: configureRX();
   844  051E  255E               	fcall	_configureRX
   845  051F                     l1170:	
   846                           ;receiver.c: 58: while(1) {
   847                           
   848                           
   849                           ;receiver.c: 59: LATCbits.LATC4 = 1;
   850  051F  0022               	movlb	2	; select bank2
   851  0520  160E               	bsf	14,4	;volatile
   852  0521                     l135:	
   853                           ;receiver.c: 60: while(PORTAbits.RA5);
   854                           
   855  0521  0020               	movlb	0	; select bank0
   856  0522  1A8C               	btfsc	12,5	;volatile
   857  0523  2D21               	goto	l135
   858                           
   859                           ;receiver.c: 61: LATCbits.LATC4 = 0;
   860  0524  0022               	movlb	2	; select bank2
   861  0525  120E               	bcf	14,4	;volatile
   862                           
   863                           ;receiver.c: 62: uint8_t data = readData();
   864  0526  245C               	fcall	_readData
   865  0527  00FC               	movwf	??_main
   866  0528  087C               	movf	??_main,w
   867  0529  0020               	movlb	0	; select bank0
   868  052A  00D4               	movwf	main@data
   869                           
   870                           ;receiver.c: 63: resetIRQ();
   871  052B  2484               	fcall	_resetIRQ
   872                           
   873                           ;receiver.c: 64: uint16_t dc = (((double)data)/50)*0x3ff;
   874  052C  0020               	movlb	0	; select bank0
   875  052D  0854               	movf	main@data,w
   876  052E  24E4               	fcall	___lbtoft
   877  052F  0878               	movf	?___lbtoft,w
   878  0530  0020               	movlb	0	; select bank0
   879  0531  00A7               	movwf	___ftdiv@f1
   880  0532  0879               	movf	?___lbtoft+1,w
   881  0533  00A8               	movwf	___ftdiv@f1+1
   882  0534  087A               	movf	?___lbtoft+2,w
   883  0535  00A9               	movwf	___ftdiv@f1+2
   884  0536  3000               	movlw	0
   885  0537  00A4               	movwf	___ftdiv@f2
   886  0538  3048               	movlw	72
   887  0539  00A5               	movwf	___ftdiv@f2+1
   888  053A  3042               	movlw	66
   889  053B  00A6               	movwf	___ftdiv@f2+2
   890  053C  26A3               	fcall	___ftdiv
   891  053D  0020               	movlb	0	; select bank0
   892  053E  0824               	movf	?___ftdiv,w
   893  053F  00B7               	movwf	___ftmul@f2
   894  0540  0825               	movf	?___ftdiv+1,w
   895  0541  00B8               	movwf	___ftmul@f2+1
   896  0542  0826               	movf	?___ftdiv+2,w
   897  0543  00B9               	movwf	___ftmul@f2+2
   898  0544  30C0               	movlw	192
   899  0545  00B4               	movwf	___ftmul@f1
   900  0546  307F               	movlw	127
   901  0547  00B5               	movwf	___ftmul@f1+1
   902  0548  3044               	movlw	68
   903  0549  00B6               	movwf	___ftmul@f1+2
   904  054A  274B               	fcall	___ftmul
   905  054B  0020               	movlb	0	; select bank0
   906  054C  0834               	movf	?___ftmul,w
   907  054D  00C4               	movwf	___fttol@f1
   908  054E  0835               	movf	?___ftmul+1,w
   909  054F  00C5               	movwf	___fttol@f1+1
   910  0550  0836               	movf	?___ftmul+2,w
   911  0551  00C6               	movwf	___fttol@f1+2
   912  0552  261C               	fcall	___fttol
   913  0553  0020               	movlb	0	; select bank0
   914  0554  0845               	movf	?___fttol+1,w
   915  0555  00D3               	movwf	main@dc+1
   916  0556  0844               	movf	?___fttol,w
   917  0557  00D2               	movwf	main@dc
   918                           
   919                           ;receiver.c: 65: setDutyCycle(dc);
   920  0558  0853               	movf	main@dc+1,w
   921  0559  00F1               	movwf	setDutyCycle@dc+1
   922  055A  0852               	movf	main@dc,w
   923  055B  00F0               	movwf	setDutyCycle@dc
   924  055C  24B7               	fcall	_setDutyCycle
   925  055D  2D1F               	goto	l1170
   926  055E                     __end_of_main:	
   927                           
   928                           	psect	text1
   929  0484                     __ptext1:	
   930 ;; *************** function _resetIRQ *****************
   931 ;; Defined at:
   932 ;;		line 73 in file "spi.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  write           2   10[COMMON] unsigned char [2]
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1
   946 ;;      Params:         0       0       0
   947 ;;      Locals:         2       0       0
   948 ;;      Temps:          1       0       0
   949 ;;      Totals:         3       0       0
   950 ;;Total ram usage:        3 bytes
   951 ;; Hardware stack levels used:    1
   952 ;; Hardware stack levels required when called:    2
   953 ;; This function calls:
   954 ;;		_SPI_writeArray
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function _resetIRQ
   962  0484                     _resetIRQ:	
   963                           
   964                           ;spi.c: 74: uint8_t write[2];
   965                           ;spi.c: 75: write[0] = (0x07 & 0b00011111) | 0b00100000;
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _resetIRQ: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   969  0484  3027               	movlw	39
   970  0485  00F9               	movwf	??_resetIRQ
   971  0486  0879               	movf	??_resetIRQ,w
   972  0487  00FA               	movwf	resetIRQ@write
   973                           
   974                           ;spi.c: 76: write[1] = 0b01110000;
   975  0488  3070               	movlw	112
   976  0489  00F9               	movwf	??_resetIRQ
   977  048A  0879               	movf	??_resetIRQ,w
   978  048B  00FB               	movwf	resetIRQ@write+1
   979                           
   980                           ;spi.c: 77: SPI_writeArray(write, 2);
   981  048C  3002               	movlw	2
   982  048D  00F9               	movwf	??_resetIRQ
   983  048E  0879               	movf	??_resetIRQ,w
   984  048F  00F3               	movwf	SPI_writeArray@length
   985  0490  307A               	movlw	(low (resetIRQ@write| 0))& (0+255)
   986  0491  24FD               	fcall	_SPI_writeArray
   987  0492  0008               	return
   988  0493                     __end_of_resetIRQ:	
   989                           
   990                           	psect	text2
   991  045C                     __ptext2:	
   992 ;; *************** function _readData *****************
   993 ;; Defined at:
   994 ;;		line 119 in file "receiver.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  ret             1    4[COMMON] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      unsigned char 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1
  1008 ;;      Params:         0       0       0
  1009 ;;      Locals:         1       0       0
  1010 ;;      Temps:          1       0       0
  1011 ;;      Totals:         2       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    1
  1015 ;; This function calls:
  1016 ;;		_SPI_write_byte
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _readData
  1024  045C                     _readData:	
  1025                           
  1026                           ;receiver.c: 120: LATCbits.LATC3 = 0;
  1027                           
  1028                           ;incstack = 0
  1029                           ; Regs used in _readData: [wreg+status,2+status,0+pclath+cstack]
  1030  045C  0022               	movlb	2	; select bank2
  1031  045D  118E               	bcf	14,3	;volatile
  1032                           
  1033                           ;receiver.c: 121: SPI_write_byte(0b01100001);
  1034  045E  3061               	movlw	97
  1035  045F  2493               	fcall	_SPI_write_byte
  1036                           
  1037                           ;receiver.c: 122: uint8_t ret = SPI_write_byte(0xFF);
  1038  0460  30FF               	movlw	255
  1039  0461  2493               	fcall	_SPI_write_byte
  1040  0462  00F3               	movwf	??_readData
  1041  0463  0873               	movf	??_readData,w
  1042  0464  00F4               	movwf	readData@ret
  1043                           
  1044                           ;receiver.c: 123: LATCbits.LATC3 = 1;
  1045  0465  0022               	movlb	2	; select bank2
  1046  0466  158E               	bsf	14,3	;volatile
  1047                           
  1048                           ;receiver.c: 124: return ret;
  1049  0467  0874               	movf	readData@ret,w
  1050  0468  0008               	return
  1051  0469                     __end_of_readData:	
  1052                           
  1053                           	psect	text3
  1054  055E                     __ptext3:	
  1055 ;; *************** function _configureRX *****************
  1056 ;; Defined at:
  1057 ;;		line 81 in file "receiver.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  write           2   10[COMMON] unsigned char [2]
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1
  1071 ;;      Params:         0       0       0
  1072 ;;      Locals:         2       0       0
  1073 ;;      Temps:          1       0       0
  1074 ;;      Totals:         3       0       0
  1075 ;;Total ram usage:        3 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; Hardware stack levels required when called:    2
  1078 ;; This function calls:
  1079 ;;		_SPI_writeArray
  1080 ;; This function is called by:
  1081 ;;		_main
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function _configureRX
  1087  055E                     _configureRX:	
  1088                           
  1089                           ;receiver.c: 90: LATCbits.LATC4 = 0;
  1090                           
  1091                           ;incstack = 0
  1092                           ; Regs used in _configureRX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1093  055E  0022               	movlb	2	; select bank2
  1094  055F  120E               	bcf	14,4	;volatile
  1095                           
  1096                           ;receiver.c: 91: _delay((unsigned long)((1)*(16000000UL/4000.0)));
  1097  0560  3006               	movlw	6
  1098  0561  00F9               	movwf	??_configureRX
  1099  0562  3030               	movlw	48
  1100  0563                     u957:	
  1101  0563  0B89               	decfsz	9,f
  1102  0564  2D63               	goto	u957
  1103  0565  0BF9               	decfsz	??_configureRX,f
  1104  0566  2D63               	goto	u957
  1105  0567  3200               	nop2
  1106                           
  1107                           ;receiver.c: 92: LATCbits.LATC3 = 1;
  1108  0568  0022               	movlb	2	; select bank2
  1109  0569  158E               	bsf	14,3	;volatile
  1110                           
  1111                           ;receiver.c: 93: _delay((unsigned long)((10)*(16000000UL/4000.0)));
  1112  056A  3034               	movlw	52
  1113  056B  00F9               	movwf	??_configureRX
  1114  056C  30F2               	movlw	242
  1115  056D                     u967:	
  1116  056D  0B89               	decfsz	9,f
  1117  056E  2D6D               	goto	u967
  1118  056F  0BF9               	decfsz	??_configureRX,f
  1119  0570  2D6D               	goto	u967
  1120                           
  1121                           ;receiver.c: 94: uint8_t write[2];
  1122                           ;receiver.c: 95: write[0] = (0x00 & 0b00011111) | 0b00100000;
  1123  0571  3020               	movlw	32
  1124  0572  00F9               	movwf	??_configureRX
  1125  0573  0879               	movf	??_configureRX,w
  1126  0574  00FA               	movwf	configureRX@write
  1127                           
  1128                           ;receiver.c: 96: write[1] = 0b00111011;
  1129  0575  303B               	movlw	59
  1130  0576  00F9               	movwf	??_configureRX
  1131  0577  0879               	movf	??_configureRX,w
  1132  0578  00FB               	movwf	configureRX@write+1
  1133                           
  1134                           ;receiver.c: 97: SPI_writeArray(write, 2);
  1135  0579  3002               	movlw	2
  1136  057A  00F9               	movwf	??_configureRX
  1137  057B  0879               	movf	??_configureRX,w
  1138  057C  00F3               	movwf	SPI_writeArray@length
  1139  057D  307A               	movlw	(low (configureRX@write| 0))& (0+255)
  1140  057E  24FD               	fcall	_SPI_writeArray
  1141                           
  1142                           ;receiver.c: 100: write[0] = (0x01 & 0b00011111) | 0b00100000;
  1143  057F  3021               	movlw	33
  1144  0580  00F9               	movwf	??_configureRX
  1145  0581  0879               	movf	??_configureRX,w
  1146  0582  00FA               	movwf	configureRX@write
  1147                           
  1148                           ;receiver.c: 101: write[1] = 0b00000001;
  1149  0583  01FB               	clrf	configureRX@write+1
  1150  0584  0AFB               	incf	configureRX@write+1,f
  1151                           
  1152                           ;receiver.c: 102: SPI_writeArray(write, 2);
  1153  0585  3002               	movlw	2
  1154  0586  00F9               	movwf	??_configureRX
  1155  0587  0879               	movf	??_configureRX,w
  1156  0588  00F3               	movwf	SPI_writeArray@length
  1157  0589  307A               	movlw	(low (configureRX@write| 0))& (0+255)
  1158  058A  24FD               	fcall	_SPI_writeArray
  1159                           
  1160                           ;receiver.c: 104: write[0] = (0x02 & 0b00011111) | 0b00100000;
  1161  058B  3022               	movlw	34
  1162  058C  00F9               	movwf	??_configureRX
  1163  058D  0879               	movf	??_configureRX,w
  1164  058E  00FA               	movwf	configureRX@write
  1165                           
  1166                           ;receiver.c: 105: write[1] = 0b00000001;
  1167  058F  01FB               	clrf	configureRX@write+1
  1168  0590  0AFB               	incf	configureRX@write+1,f
  1169                           
  1170                           ;receiver.c: 106: SPI_writeArray(write, 2);
  1171  0591  3002               	movlw	2
  1172  0592  00F9               	movwf	??_configureRX
  1173  0593  0879               	movf	??_configureRX,w
  1174  0594  00F3               	movwf	SPI_writeArray@length
  1175  0595  307A               	movlw	(low (configureRX@write| 0))& (0+255)
  1176  0596  24FD               	fcall	_SPI_writeArray
  1177                           
  1178                           ;receiver.c: 108: write[0] = (RX_PW_P[0] & 0b00011111) | 0b00100000;
  1179  0597  3069               	movlw	low (_RX_PW_P| (0+32768))
  1180  0598  0084               	movwf	4
  1181  0599  3084               	movlw	high (_RX_PW_P| (0+32768))
  1182  059A  0085               	movwf	5
  1183  059B  0800               	movf	0,w	;code access
  1184  059C  391F               	andlw	31
  1185  059D  3820               	iorlw	32
  1186  059E  00F9               	movwf	??_configureRX
  1187  059F  0879               	movf	??_configureRX,w
  1188  05A0  00FA               	movwf	configureRX@write
  1189                           
  1190                           ;receiver.c: 109: write[1] = 0b00000001;
  1191  05A1  01FB               	clrf	configureRX@write+1
  1192  05A2  0AFB               	incf	configureRX@write+1,f
  1193                           
  1194                           ;receiver.c: 110: SPI_writeArray(write, 2);
  1195  05A3  3002               	movlw	2
  1196  05A4  00F9               	movwf	??_configureRX
  1197  05A5  0879               	movf	??_configureRX,w
  1198  05A6  00F3               	movwf	SPI_writeArray@length
  1199  05A7  307A               	movlw	(low (configureRX@write| 0))& (0+255)
  1200  05A8  24FD               	fcall	_SPI_writeArray
  1201                           
  1202                           ;receiver.c: 112: write[0] = (0x03 & 0b00011111) | 0b00100000;
  1203  05A9  3023               	movlw	35
  1204  05AA  00F9               	movwf	??_configureRX
  1205  05AB  0879               	movf	??_configureRX,w
  1206  05AC  00FA               	movwf	configureRX@write
  1207                           
  1208                           ;receiver.c: 113: write[1] = 0b0000011;
  1209  05AD  3003               	movlw	3
  1210  05AE  00F9               	movwf	??_configureRX
  1211  05AF  0879               	movf	??_configureRX,w
  1212  05B0  00FB               	movwf	configureRX@write+1
  1213                           
  1214                           ;receiver.c: 114: SPI_writeArray(write, 2);
  1215  05B1  3002               	movlw	2
  1216  05B2  00F9               	movwf	??_configureRX
  1217  05B3  0879               	movf	??_configureRX,w
  1218  05B4  00F3               	movwf	SPI_writeArray@length
  1219  05B5  307A               	movlw	(low (configureRX@write| 0))& (0+255)
  1220  05B6  24FD               	fcall	_SPI_writeArray
  1221  05B7  0008               	return
  1222  05B8                     __end_of_configureRX:	
  1223                           
  1224                           	psect	text4
  1225  04FD                     __ptext4:	
  1226 ;; *************** function _SPI_writeArray *****************
  1227 ;; Defined at:
  1228 ;;		line 54 in file "spi.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;  data            1    wreg     PTR unsigned char 
  1231 ;;		 -> configureRX@write(2), resetIRQ@write(2), 
  1232 ;;  length          1    3[COMMON] unsigned char 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  data            1    8[COMMON] PTR unsigned char 
  1235 ;;		 -> configureRX@write(2), resetIRQ@write(2), 
  1236 ;;  i               1    7[COMMON] unsigned char 
  1237 ;;  ret             1    6[COMMON] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      unsigned char 
  1240 ;; Registers used:
  1241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1
  1247 ;;      Params:         1       0       0
  1248 ;;      Locals:         3       0       0
  1249 ;;      Temps:          2       0       0
  1250 ;;      Totals:         6       0       0
  1251 ;;Total ram usage:        6 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    1
  1254 ;; This function calls:
  1255 ;;		_SPI_write_byte
  1256 ;; This function is called by:
  1257 ;;		_resetIRQ
  1258 ;;		_configureRX
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function _SPI_writeArray
  1264  04FD                     _SPI_writeArray:	
  1265                           
  1266                           ;incstack = 0
  1267                           ; Regs used in _SPI_writeArray: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1268                           ;SPI_writeArray@data stored from wreg
  1269  04FD  00F8               	movwf	SPI_writeArray@data
  1270                           
  1271                           ;spi.c: 55: LATCbits.LATC3 = 0;
  1272  04FE  0022               	movlb	2	; select bank2
  1273  04FF  118E               	bcf	14,3	;volatile
  1274                           
  1275                           ;spi.c: 56: uint8_t ret;
  1276                           ;spi.c: 57: for(uint8_t i = 0; i < length; ++i) {
  1277  0500  01F7               	clrf	SPI_writeArray@i
  1278  0501                     l902:	
  1279  0501  0873               	movf	SPI_writeArray@length,w
  1280  0502  0277               	subwf	SPI_writeArray@i,w
  1281  0503  1803               	btfsc	3,0
  1282  0504  2D15               	goto	l80
  1283                           
  1284                           ;spi.c: 58: ret = SPI_write_byte(data[i]);
  1285  0505  0877               	movf	SPI_writeArray@i,w
  1286  0506  0778               	addwf	SPI_writeArray@data,w
  1287  0507  00F4               	movwf	??_SPI_writeArray
  1288  0508  0874               	movf	??_SPI_writeArray,w
  1289  0509  0086               	movwf	6
  1290  050A  0187               	clrf	7
  1291  050B  0801               	movf	1,w
  1292  050C  2493               	fcall	_SPI_write_byte
  1293  050D  00F5               	movwf	??_SPI_writeArray+1
  1294  050E  0875               	movf	??_SPI_writeArray+1,w
  1295  050F  00F6               	movwf	SPI_writeArray@ret
  1296  0510  3001               	movlw	1
  1297  0511  00F4               	movwf	??_SPI_writeArray
  1298  0512  0874               	movf	??_SPI_writeArray,w
  1299  0513  07F7               	addwf	SPI_writeArray@i,f
  1300  0514  2D01               	goto	l902
  1301  0515                     l80:	
  1302                           
  1303                           ;spi.c: 59: }
  1304                           ;spi.c: 61: LATCbits.LATC3 = 1;
  1305  0515  0022               	movlb	2	; select bank2
  1306  0516  158E               	bsf	14,3	;volatile
  1307                           
  1308                           ;spi.c: 62: return ret;
  1309                           ;	Return value of _SPI_writeArray is never used
  1310  0517  0008               	return
  1311  0518                     __end_of_SPI_writeArray:	
  1312                           
  1313                           	psect	text5
  1314  0493                     __ptext5:	
  1315 ;; *************** function _SPI_write_byte *****************
  1316 ;; Defined at:
  1317 ;;		line 46 in file "spi.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  data            1    wreg     unsigned char 
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  data            1    1[COMMON] unsigned char 
  1322 ;;  ret_data        1    2[COMMON] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      unsigned char 
  1325 ;; Registers used:
  1326 ;;		wreg
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1
  1332 ;;      Params:         0       0       0
  1333 ;;      Locals:         2       0       0
  1334 ;;      Temps:          1       0       0
  1335 ;;      Totals:         3       0       0
  1336 ;;Total ram usage:        3 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_SPI_writeArray
  1342 ;;		_readData
  1343 ;;		_SPI_read_byte
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function _SPI_write_byte
  1349  0493                     _SPI_write_byte:	
  1350                           
  1351                           ;incstack = 0
  1352                           ; Regs used in _SPI_write_byte: [wreg]
  1353                           ;SPI_write_byte@data stored from wreg
  1354  0493  00F1               	movwf	SPI_write_byte@data
  1355                           
  1356                           ;spi.c: 47: SSP1BUF = data;
  1357  0494  0871               	movf	SPI_write_byte@data,w
  1358  0495  0024               	movlb	4	; select bank4
  1359  0496  0091               	movwf	17	;volatile
  1360  0497                     l72:	
  1361                           ;spi.c: 48: while(!PIR1bits.SSP1IF);
  1362                           
  1363  0497  0020               	movlb	0	; select bank0
  1364  0498  1D91               	btfss	17,3	;volatile
  1365  0499  2C97               	goto	l72
  1366                           
  1367                           ;spi.c: 49: uint8_t ret_data = SSP1BUF;
  1368  049A  0024               	movlb	4	; select bank4
  1369  049B  0811               	movf	17,w	;volatile
  1370  049C  00F0               	movwf	??_SPI_write_byte
  1371  049D  0870               	movf	??_SPI_write_byte,w
  1372  049E  00F2               	movwf	SPI_write_byte@ret_data
  1373                           
  1374                           ;spi.c: 50: PIR1bits.SSP1IF = 0;
  1375  049F  0020               	movlb	0	; select bank0
  1376  04A0  1191               	bcf	17,3	;volatile
  1377                           
  1378                           ;spi.c: 51: return ret_data;
  1379  04A1  0872               	movf	SPI_write_byte@ret_data,w
  1380  04A2  0008               	return
  1381  04A3                     __end_of_SPI_write_byte:	
  1382                           
  1383                           	psect	text6
  1384  04CC                     __ptext6:	
  1385 ;; *************** function _configLEDTimer *****************
  1386 ;; Defined at:
  1387 ;;		line 127 in file "receiver.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  dc              2    6[COMMON] unsigned int 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0, pclath, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1
  1401 ;;      Params:         2       0       0
  1402 ;;      Locals:         0       0       0
  1403 ;;      Temps:          0       0       0
  1404 ;;      Totals:         2       0       0
  1405 ;;Total ram usage:        2 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    1
  1408 ;; This function calls:
  1409 ;;		_setDutyCycle
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _configLEDTimer
  1417  04CC                     _configLEDTimer:	
  1418                           
  1419                           ;receiver.c: 129: TRISAbits.TRISA2 = 1;
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _configLEDTimer: [wreg+status,2+status,0+pclath+cstack]
  1423  04CC  0021               	movlb	1	; select bank1
  1424  04CD  150C               	bsf	12,2	;volatile
  1425                           
  1426                           ;receiver.c: 131: PWM3CON = 0;
  1427  04CE  002C               	movlb	12	; select bank12
  1428  04CF  0199               	clrf	25	;volatile
  1429                           
  1430                           ;receiver.c: 133: PR2 = 0x7F;
  1431  04D0  307F               	movlw	127
  1432  04D1  0020               	movlb	0	; select bank0
  1433  04D2  009B               	movwf	27	;volatile
  1434                           
  1435                           ;receiver.c: 135: setDutyCycle(dc);
  1436  04D3  0877               	movf	configLEDTimer@dc+1,w
  1437  04D4  00F1               	movwf	setDutyCycle@dc+1
  1438  04D5  0876               	movf	configLEDTimer@dc,w
  1439  04D6  00F0               	movwf	setDutyCycle@dc
  1440  04D7  24B7               	fcall	_setDutyCycle
  1441                           
  1442                           ;receiver.c: 137: PIR1bits.TMR2IF = 0;
  1443  04D8  0020               	movlb	0	; select bank0
  1444  04D9  1091               	bcf	17,1	;volatile
  1445                           
  1446                           ;receiver.c: 138: T2CON = 0b00000100;
  1447  04DA  3004               	movlw	4
  1448  04DB  009C               	movwf	28	;volatile
  1449  04DC                     l158:	
  1450                           ;receiver.c: 142: while(!PIR1bits.TMR2IF);
  1451                           
  1452  04DC  1C91               	btfss	17,1	;volatile
  1453  04DD  2CDC               	goto	l158
  1454                           
  1455                           ;receiver.c: 143: TRISAbits.TRISA2 = 0;
  1456  04DE  0021               	movlb	1	; select bank1
  1457  04DF  110C               	bcf	12,2	;volatile
  1458                           
  1459                           ;receiver.c: 144: PWM3CON = 0b11010000;
  1460  04E0  30D0               	movlw	208
  1461  04E1  002C               	movlb	12	; select bank12
  1462  04E2  0099               	movwf	25	;volatile
  1463  04E3  0008               	return
  1464  04E4                     __end_of_configLEDTimer:	
  1465                           
  1466                           	psect	text7
  1467  04B7                     __ptext7:	
  1468 ;; *************** function _setDutyCycle *****************
  1469 ;; Defined at:
  1470 ;;		line 152 in file "receiver.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  dc              2    0[COMMON] unsigned int 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  masked          2    4[COMMON] unsigned int 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1
  1484 ;;      Params:         2       0       0
  1485 ;;      Locals:         2       0       0
  1486 ;;      Temps:          2       0       0
  1487 ;;      Totals:         6       0       0
  1488 ;;Total ram usage:        6 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;;		_configLEDTimer
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _setDutyCycle
  1500  04B7                     _setDutyCycle:	
  1501                           
  1502                           ;receiver.c: 153: uint16_t masked = dc & 0x3FF;
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _setDutyCycle: [wreg+status,2+status,0]
  1506  04B7  30FF               	movlw	255
  1507  04B8  0570               	andwf	setDutyCycle@dc,w
  1508  04B9  00F4               	movwf	setDutyCycle@masked
  1509  04BA  3003               	movlw	3
  1510  04BB  0571               	andwf	setDutyCycle@dc+1,w
  1511  04BC  00F5               	movwf	setDutyCycle@masked+1
  1512                           
  1513                           ;receiver.c: 154: PWM3DCH = (masked >> 2);
  1514  04BD  0875               	movf	setDutyCycle@masked+1,w
  1515  04BE  00F3               	movwf	??_setDutyCycle+1
  1516  04BF  0874               	movf	setDutyCycle@masked,w
  1517  04C0  00F2               	movwf	??_setDutyCycle
  1518  04C1  36F3               	lsrf	??_setDutyCycle+1,f
  1519  04C2  0CF2               	rrf	??_setDutyCycle,f
  1520  04C3  36F3               	lsrf	??_setDutyCycle+1,f
  1521  04C4  0CF2               	rrf	??_setDutyCycle,f
  1522  04C5  0872               	movf	??_setDutyCycle,w
  1523  04C6  002C               	movlb	12	; select bank12
  1524  04C7  0098               	movwf	24	;volatile
  1525                           
  1526                           ;receiver.c: 155: PWM3DCL = (masked & 0x003);
  1527  04C8  0874               	movf	setDutyCycle@masked,w
  1528  04C9  3903               	andlw	3
  1529  04CA  0097               	movwf	23	;volatile
  1530  04CB  0008               	return
  1531  04CC                     __end_of_setDutyCycle:	
  1532                           
  1533                           	psect	text8
  1534  04E4                     __ptext8:	
  1535 ;; *************** function ___lbtoft *****************
  1536 ;; Defined at:
  1537 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbtoft.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  c               1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  c               1   11[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  3    8[COMMON] float 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1
  1551 ;;      Params:         3       0       0
  1552 ;;      Locals:         1       0       0
  1553 ;;      Temps:          0       4       0
  1554 ;;      Totals:         4       4       0
  1555 ;;Total ram usage:        8 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    1
  1558 ;; This function calls:
  1559 ;;		___ftpack
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           
  1566                           ;psect for function ___lbtoft
  1567  04E4                     ___lbtoft:	
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  1571                           ;___lbtoft@c stored from wreg
  1572  04E4  00FB               	movwf	___lbtoft@c
  1573  04E5  087B               	movf	___lbtoft@c,w
  1574  04E6  0020               	movlb	0	; select bank0
  1575  04E7  00A0               	movwf	??___lbtoft
  1576  04E8  01A1               	clrf	??___lbtoft+1
  1577  04E9  01A2               	clrf	??___lbtoft+2
  1578  04EA  0820               	movf	??___lbtoft,w
  1579  04EB  00F0               	movwf	___ftpack@arg
  1580  04EC  0821               	movf	??___lbtoft+1,w
  1581  04ED  00F1               	movwf	___ftpack@arg+1
  1582  04EE  0822               	movf	??___lbtoft+2,w
  1583  04EF  00F2               	movwf	___ftpack@arg+2
  1584  04F0  308E               	movlw	142
  1585  04F1  00A3               	movwf	??___lbtoft+3
  1586  04F2  0823               	movf	??___lbtoft+3,w
  1587  04F3  00F3               	movwf	___ftpack@exp
  1588  04F4  01F4               	clrf	___ftpack@sign
  1589  04F5  25B8               	fcall	___ftpack
  1590  04F6  0870               	movf	?___ftpack,w
  1591  04F7  00F8               	movwf	?___lbtoft
  1592  04F8  0871               	movf	?___ftpack+1,w
  1593  04F9  00F9               	movwf	?___lbtoft+1
  1594  04FA  0872               	movf	?___ftpack+2,w
  1595  04FB  00FA               	movwf	?___lbtoft+2
  1596  04FC  0008               	return
  1597  04FD                     __end_of___lbtoft:	
  1598                           
  1599                           	psect	text9
  1600  061C                     __ptext9:	
  1601 ;; *************** function ___fttol *****************
  1602 ;; Defined at:
  1603 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  f1              3   36[BANK0 ] float 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  lval            4   45[BANK0 ] unsigned long 
  1608 ;;  exp1            1   49[BANK0 ] unsigned char 
  1609 ;;  sign1           1   44[BANK0 ] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  4   36[BANK0 ] long 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1
  1619 ;;      Params:         0       4       0
  1620 ;;      Locals:         0       6       0
  1621 ;;      Temps:          0       4       0
  1622 ;;      Totals:         0      14       0
  1623 ;;Total ram usage:       14 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function ___fttol
  1634  061C                     ___fttol:	
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1638  061C  0020               	movlb	0	; select bank0
  1639  061D  0844               	movf	___fttol@f1,w
  1640  061E  00C8               	movwf	??___fttol
  1641  061F  0845               	movf	___fttol@f1+1,w
  1642  0620  00C9               	movwf	??___fttol+1
  1643  0621  0846               	movf	___fttol@f1+2,w
  1644  0622  00CA               	movwf	??___fttol+2
  1645  0623  1003               	clrc
  1646  0624  0D49               	rlf	??___fttol+1,w
  1647  0625  0D4A               	rlf	??___fttol+2,w
  1648  0626  00CB               	movwf	??___fttol+3
  1649  0627  084B               	movf	??___fttol+3,w
  1650  0628  00D1               	movwf	___fttol@exp1
  1651  0629  0851               	movf	___fttol@exp1,w
  1652  062A  1D03               	btfss	3,2
  1653  062B  2E35               	goto	l1116
  1654  062C  3000               	movlw	0
  1655  062D  00C7               	movwf	?___fttol+3
  1656  062E  3000               	movlw	0
  1657  062F  00C6               	movwf	?___fttol+2
  1658  0630  3000               	movlw	0
  1659  0631  00C5               	movwf	?___fttol+1
  1660  0632  3000               	movlw	0
  1661  0633  00C4               	movwf	?___fttol
  1662  0634  0008               	return
  1663  0635                     l1116:	
  1664  0635  0844               	movf	___fttol@f1,w
  1665  0636  00C8               	movwf	??___fttol
  1666  0637  0845               	movf	___fttol@f1+1,w
  1667  0638  00C9               	movwf	??___fttol+1
  1668  0639  0846               	movf	___fttol@f1+2,w
  1669  063A  00CA               	movwf	??___fttol+2
  1670  063B  3017               	movlw	23
  1671  063C                     u855:	
  1672  063C  36CA               	lsrf	??___fttol+2,f
  1673  063D  0CC9               	rrf	??___fttol+1,f
  1674  063E  0CC8               	rrf	??___fttol,f
  1675  063F  0B89               	decfsz	9,f
  1676  0640  2E3C               	goto	u855
  1677  0641  0848               	movf	??___fttol,w
  1678  0642  00CB               	movwf	??___fttol+3
  1679  0643  084B               	movf	??___fttol+3,w
  1680  0644  00CC               	movwf	___fttol@sign1
  1681  0645  17C5               	bsf	___fttol@f1+1,7
  1682  0646  30FF               	movlw	255
  1683  0647  05C4               	andwf	___fttol@f1,f
  1684  0648  30FF               	movlw	255
  1685  0649  05C5               	andwf	___fttol@f1+1,f
  1686  064A  3000               	movlw	0
  1687  064B  05C6               	andwf	___fttol@f1+2,f
  1688  064C  0844               	movf	___fttol@f1,w
  1689  064D  00CD               	movwf	___fttol@lval
  1690  064E  0845               	movf	___fttol@f1+1,w
  1691  064F  00CE               	movwf	___fttol@lval+1
  1692  0650  0846               	movf	___fttol@f1+2,w
  1693  0651  00CF               	movwf	___fttol@lval+2
  1694  0652  01D0               	clrf	___fttol@lval+3
  1695  0653  308E               	movlw	142
  1696  0654  02D1               	subwf	___fttol@exp1,f
  1697  0655  1FD1               	btfss	___fttol@exp1,7
  1698  0656  2E73               	goto	l1136
  1699  0657  0851               	movf	___fttol@exp1,w
  1700  0658  3A80               	xorlw	128
  1701  0659  3E8F               	addlw	143
  1702  065A  1803               	skipnc
  1703  065B  2E65               	goto	l1134
  1704  065C  3000               	movlw	0
  1705  065D  00C7               	movwf	?___fttol+3
  1706  065E  3000               	movlw	0
  1707  065F  00C6               	movwf	?___fttol+2
  1708  0660  3000               	movlw	0
  1709  0661  00C5               	movwf	?___fttol+1
  1710  0662  3000               	movlw	0
  1711  0663  00C4               	movwf	?___fttol
  1712  0664  0008               	return
  1713  0665                     l1134:	
  1714  0665  3001               	movlw	1
  1715  0666                     u885:	
  1716  0666  36D0               	lsrf	___fttol@lval+3,f
  1717  0667  0CCF               	rrf	___fttol@lval+2,f
  1718  0668  0CCE               	rrf	___fttol@lval+1,f
  1719  0669  0CCD               	rrf	___fttol@lval,f
  1720  066A  0B89               	decfsz	9,f
  1721  066B  2E66               	goto	u885
  1722  066C  3001               	movlw	1
  1723  066D  00C8               	movwf	??___fttol
  1724  066E  0848               	movf	??___fttol,w
  1725  066F  07D1               	addwf	___fttol@exp1,f
  1726  0670  1903               	btfsc	3,2
  1727  0671  2E8C               	goto	l1144
  1728  0672  2E65               	goto	l1134
  1729  0673                     l1136:	
  1730  0673  3018               	movlw	24
  1731  0674  0251               	subwf	___fttol@exp1,w
  1732  0675  1C03               	skipc
  1733  0676  2E89               	goto	l420
  1734  0677  3000               	movlw	0
  1735  0678  00C7               	movwf	?___fttol+3
  1736  0679  3000               	movlw	0
  1737  067A  00C6               	movwf	?___fttol+2
  1738  067B  3000               	movlw	0
  1739  067C  00C5               	movwf	?___fttol+1
  1740  067D  3000               	movlw	0
  1741  067E  00C4               	movwf	?___fttol
  1742  067F  0008               	return
  1743  0680                     l1142:	
  1744  0680  3001               	movlw	1
  1745  0681                     u915:	
  1746  0681  35CD               	lslf	___fttol@lval,f
  1747  0682  0DCE               	rlf	___fttol@lval+1,f
  1748  0683  0DCF               	rlf	___fttol@lval+2,f
  1749  0684  0DD0               	rlf	___fttol@lval+3,f
  1750  0685  0B89               	decfsz	9,f
  1751  0686  2E81               	goto	u915
  1752  0687  3001               	movlw	1
  1753  0688  02D1               	subwf	___fttol@exp1,f
  1754  0689                     l420:	
  1755  0689  0851               	movf	___fttol@exp1,w
  1756  068A  1D03               	btfss	3,2
  1757  068B  2E80               	goto	l1142
  1758  068C                     l1144:	
  1759  068C  084C               	movf	___fttol@sign1,w
  1760  068D  1903               	btfsc	3,2
  1761  068E  2E9A               	goto	l1148
  1762  068F  09CD               	comf	___fttol@lval,f
  1763  0690  09CE               	comf	___fttol@lval+1,f
  1764  0691  09CF               	comf	___fttol@lval+2,f
  1765  0692  09D0               	comf	___fttol@lval+3,f
  1766  0693  0ACD               	incf	___fttol@lval,f
  1767  0694  1903               	skipnz
  1768  0695  0ACE               	incf	___fttol@lval+1,f
  1769  0696  1903               	skipnz
  1770  0697  0ACF               	incf	___fttol@lval+2,f
  1771  0698  1903               	skipnz
  1772  0699  0AD0               	incf	___fttol@lval+3,f
  1773  069A                     l1148:	
  1774  069A  0850               	movf	___fttol@lval+3,w
  1775  069B  00C7               	movwf	?___fttol+3
  1776  069C  084F               	movf	___fttol@lval+2,w
  1777  069D  00C6               	movwf	?___fttol+2
  1778  069E  084E               	movf	___fttol@lval+1,w
  1779  069F  00C5               	movwf	?___fttol+1
  1780  06A0  084D               	movf	___fttol@lval,w
  1781  06A1  00C4               	movwf	?___fttol
  1782  06A2  0008               	return
  1783  06A3                     __end_of___fttol:	
  1784                           
  1785                           	psect	text10
  1786  074B                     __ptext10:	
  1787 ;; *************** function ___ftmul *****************
  1788 ;; Defined at:
  1789 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;  f1              3   20[BANK0 ] float 
  1792 ;;  f2              3   23[BANK0 ] float 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  1795 ;;  sign            1   35[BANK0 ] unsigned char 
  1796 ;;  cntr            1   34[BANK0 ] unsigned char 
  1797 ;;  exp             1   30[BANK0 ] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  3   20[BANK0 ] float 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1
  1807 ;;      Params:         0       6       0
  1808 ;;      Locals:         0       6       0
  1809 ;;      Temps:          0       4       0
  1810 ;;      Totals:         0      16       0
  1811 ;;Total ram usage:       16 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    1
  1814 ;; This function calls:
  1815 ;;		___ftpack
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function ___ftmul
  1823  074B                     ___ftmul:	
  1824                           
  1825                           ;incstack = 0
  1826                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1827  074B  0020               	movlb	0	; select bank0
  1828  074C  0834               	movf	___ftmul@f1,w
  1829  074D  00BA               	movwf	??___ftmul
  1830  074E  0835               	movf	___ftmul@f1+1,w
  1831  074F  00BB               	movwf	??___ftmul+1
  1832  0750  0836               	movf	___ftmul@f1+2,w
  1833  0751  00BC               	movwf	??___ftmul+2
  1834  0752  1003               	clrc
  1835  0753  0D3B               	rlf	??___ftmul+1,w
  1836  0754  0D3C               	rlf	??___ftmul+2,w
  1837  0755  00BD               	movwf	??___ftmul+3
  1838  0756  083D               	movf	??___ftmul+3,w
  1839  0757  00BE               	movwf	___ftmul@exp
  1840  0758  083E               	movf	___ftmul@exp,w
  1841  0759  1D03               	btfss	3,2
  1842  075A  2F62               	goto	l1066
  1843  075B  3000               	movlw	0
  1844  075C  00B4               	movwf	?___ftmul
  1845  075D  3000               	movlw	0
  1846  075E  00B5               	movwf	?___ftmul+1
  1847  075F  3000               	movlw	0
  1848  0760  00B6               	movwf	?___ftmul+2
  1849  0761  0008               	return
  1850  0762                     l1066:	
  1851  0762  0837               	movf	___ftmul@f2,w
  1852  0763  00BA               	movwf	??___ftmul
  1853  0764  0838               	movf	___ftmul@f2+1,w
  1854  0765  00BB               	movwf	??___ftmul+1
  1855  0766  0839               	movf	___ftmul@f2+2,w
  1856  0767  00BC               	movwf	??___ftmul+2
  1857  0768  1003               	clrc
  1858  0769  0D3B               	rlf	??___ftmul+1,w
  1859  076A  0D3C               	rlf	??___ftmul+2,w
  1860  076B  00BD               	movwf	??___ftmul+3
  1861  076C  083D               	movf	??___ftmul+3,w
  1862  076D  00C3               	movwf	___ftmul@sign
  1863  076E  0843               	movf	___ftmul@sign,w
  1864  076F  1D03               	btfss	3,2
  1865  0770  2F78               	goto	l1072
  1866  0771  3000               	movlw	0
  1867  0772  00B4               	movwf	?___ftmul
  1868  0773  3000               	movlw	0
  1869  0774  00B5               	movwf	?___ftmul+1
  1870  0775  3000               	movlw	0
  1871  0776  00B6               	movwf	?___ftmul+2
  1872  0777  0008               	return
  1873  0778                     l1072:	
  1874  0778  0843               	movf	___ftmul@sign,w
  1875  0779  3E7B               	addlw	123
  1876  077A  00BA               	movwf	??___ftmul
  1877  077B  083A               	movf	??___ftmul,w
  1878  077C  07BE               	addwf	___ftmul@exp,f
  1879  077D  0834               	movf	___ftmul@f1,w
  1880  077E  00BA               	movwf	??___ftmul
  1881  077F  0835               	movf	___ftmul@f1+1,w
  1882  0780  00BB               	movwf	??___ftmul+1
  1883  0781  0836               	movf	___ftmul@f1+2,w
  1884  0782  00BC               	movwf	??___ftmul+2
  1885  0783  3010               	movlw	16
  1886  0784                     u745:	
  1887  0784  36BC               	lsrf	??___ftmul+2,f
  1888  0785  0CBB               	rrf	??___ftmul+1,f
  1889  0786  0CBA               	rrf	??___ftmul,f
  1890  0787  0B89               	decfsz	9,f
  1891  0788  2F84               	goto	u745
  1892  0789  083A               	movf	??___ftmul,w
  1893  078A  00BD               	movwf	??___ftmul+3
  1894  078B  083D               	movf	??___ftmul+3,w
  1895  078C  00C3               	movwf	___ftmul@sign
  1896  078D  0837               	movf	___ftmul@f2,w
  1897  078E  00BA               	movwf	??___ftmul
  1898  078F  0838               	movf	___ftmul@f2+1,w
  1899  0790  00BB               	movwf	??___ftmul+1
  1900  0791  0839               	movf	___ftmul@f2+2,w
  1901  0792  00BC               	movwf	??___ftmul+2
  1902  0793  3010               	movlw	16
  1903  0794                     u755:	
  1904  0794  36BC               	lsrf	??___ftmul+2,f
  1905  0795  0CBB               	rrf	??___ftmul+1,f
  1906  0796  0CBA               	rrf	??___ftmul,f
  1907  0797  0B89               	decfsz	9,f
  1908  0798  2F94               	goto	u755
  1909  0799  083A               	movf	??___ftmul,w
  1910  079A  00BD               	movwf	??___ftmul+3
  1911  079B  083D               	movf	??___ftmul+3,w
  1912  079C  06C3               	xorwf	___ftmul@sign,f
  1913  079D  3080               	movlw	128
  1914  079E  00BA               	movwf	??___ftmul
  1915  079F  083A               	movf	??___ftmul,w
  1916  07A0  05C3               	andwf	___ftmul@sign,f
  1917  07A1  17B5               	bsf	___ftmul@f1+1,7
  1918  07A2  17B8               	bsf	___ftmul@f2+1,7
  1919  07A3  30FF               	movlw	255
  1920  07A4  05B7               	andwf	___ftmul@f2,f
  1921  07A5  30FF               	movlw	255
  1922  07A6  05B8               	andwf	___ftmul@f2+1,f
  1923  07A7  3000               	movlw	0
  1924  07A8  05B9               	andwf	___ftmul@f2+2,f
  1925  07A9  3000               	movlw	0
  1926  07AA  00BF               	movwf	___ftmul@f3_as_product
  1927  07AB  3000               	movlw	0
  1928  07AC  00C0               	movwf	___ftmul@f3_as_product+1
  1929  07AD  3000               	movlw	0
  1930  07AE  00C1               	movwf	___ftmul@f3_as_product+2
  1931  07AF  3007               	movlw	7
  1932  07B0  00BA               	movwf	??___ftmul
  1933  07B1  083A               	movf	??___ftmul,w
  1934  07B2  00C2               	movwf	___ftmul@cntr
  1935  07B3                     l1084:	
  1936  07B3  1C34               	btfss	___ftmul@f1,0
  1937  07B4  2FBB               	goto	l1088
  1938  07B5  0837               	movf	___ftmul@f2,w
  1939  07B6  07BF               	addwf	___ftmul@f3_as_product,f
  1940  07B7  0838               	movf	___ftmul@f2+1,w
  1941  07B8  3DC0               	addwfc	___ftmul@f3_as_product+1,f
  1942  07B9  0839               	movf	___ftmul@f2+2,w
  1943  07BA  3DC1               	addwfc	___ftmul@f3_as_product+2,f
  1944  07BB                     l1088:	
  1945  07BB  3001               	movlw	1
  1946  07BC                     u775:	
  1947  07BC  36B6               	lsrf	___ftmul@f1+2,f
  1948  07BD  0CB5               	rrf	___ftmul@f1+1,f
  1949  07BE  0CB4               	rrf	___ftmul@f1,f
  1950  07BF  0B89               	decfsz	9,f
  1951  07C0  2FBC               	goto	u775
  1952  07C1  3001               	movlw	1
  1953  07C2                     u785:	
  1954  07C2  35B7               	lslf	___ftmul@f2,f
  1955  07C3  0DB8               	rlf	___ftmul@f2+1,f
  1956  07C4  0DB9               	rlf	___ftmul@f2+2,f
  1957  07C5  0B89               	decfsz	9,f
  1958  07C6  2FC2               	goto	u785
  1959  07C7  3001               	movlw	1
  1960  07C8  02C2               	subwf	___ftmul@cntr,f
  1961  07C9  1D03               	btfss	3,2
  1962  07CA  2FB3               	goto	l1084
  1963  07CB  3009               	movlw	9
  1964  07CC  00BA               	movwf	??___ftmul
  1965  07CD  083A               	movf	??___ftmul,w
  1966  07CE  00C2               	movwf	___ftmul@cntr
  1967  07CF                     l1096:	
  1968  07CF  1C34               	btfss	___ftmul@f1,0
  1969  07D0  2FD7               	goto	l1100
  1970  07D1  0837               	movf	___ftmul@f2,w
  1971  07D2  07BF               	addwf	___ftmul@f3_as_product,f
  1972  07D3  0838               	movf	___ftmul@f2+1,w
  1973  07D4  3DC0               	addwfc	___ftmul@f3_as_product+1,f
  1974  07D5  0839               	movf	___ftmul@f2+2,w
  1975  07D6  3DC1               	addwfc	___ftmul@f3_as_product+2,f
  1976  07D7                     l1100:	
  1977  07D7  3001               	movlw	1
  1978  07D8                     u815:	
  1979  07D8  36B6               	lsrf	___ftmul@f1+2,f
  1980  07D9  0CB5               	rrf	___ftmul@f1+1,f
  1981  07DA  0CB4               	rrf	___ftmul@f1,f
  1982  07DB  0B89               	decfsz	9,f
  1983  07DC  2FD8               	goto	u815
  1984  07DD  3001               	movlw	1
  1985  07DE                     u825:	
  1986  07DE  36C1               	lsrf	___ftmul@f3_as_product+2,f
  1987  07DF  0CC0               	rrf	___ftmul@f3_as_product+1,f
  1988  07E0  0CBF               	rrf	___ftmul@f3_as_product,f
  1989  07E1  0B89               	decfsz	9,f
  1990  07E2  2FDE               	goto	u825
  1991  07E3  3001               	movlw	1
  1992  07E4  02C2               	subwf	___ftmul@cntr,f
  1993  07E5  1D03               	btfss	3,2
  1994  07E6  2FCF               	goto	l1096
  1995  07E7  083F               	movf	___ftmul@f3_as_product,w
  1996  07E8  00F0               	movwf	___ftpack@arg
  1997  07E9  0840               	movf	___ftmul@f3_as_product+1,w
  1998  07EA  00F1               	movwf	___ftpack@arg+1
  1999  07EB  0841               	movf	___ftmul@f3_as_product+2,w
  2000  07EC  00F2               	movwf	___ftpack@arg+2
  2001  07ED  083E               	movf	___ftmul@exp,w
  2002  07EE  00BA               	movwf	??___ftmul
  2003  07EF  083A               	movf	??___ftmul,w
  2004  07F0  00F3               	movwf	___ftpack@exp
  2005  07F1  0843               	movf	___ftmul@sign,w
  2006  07F2  00BB               	movwf	??___ftmul+1
  2007  07F3  083B               	movf	??___ftmul+1,w
  2008  07F4  00F4               	movwf	___ftpack@sign
  2009  07F5  25B8               	fcall	___ftpack
  2010  07F6  0870               	movf	?___ftpack,w
  2011  07F7  0020               	movlb	0	; select bank0
  2012  07F8  00B4               	movwf	?___ftmul
  2013  07F9  0871               	movf	?___ftpack+1,w
  2014  07FA  00B5               	movwf	?___ftmul+1
  2015  07FB  0872               	movf	?___ftpack+2,w
  2016  07FC  00B6               	movwf	?___ftmul+2
  2017  07FD  0008               	return
  2018  07FE                     __end_of___ftmul:	
  2019                           
  2020                           	psect	text11
  2021  06A3                     __ptext11:	
  2022 ;; *************** function ___ftdiv *****************
  2023 ;; Defined at:
  2024 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  f2              3    4[BANK0 ] float 
  2027 ;;  f1              3    7[BANK0 ] float 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  f3              3   15[BANK0 ] float 
  2030 ;;  sign            1   19[BANK0 ] unsigned char 
  2031 ;;  exp             1   18[BANK0 ] unsigned char 
  2032 ;;  cntr            1   14[BANK0 ] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  3    4[BANK0 ] float 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, pclath, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1
  2042 ;;      Params:         0       6       0
  2043 ;;      Locals:         0       6       0
  2044 ;;      Temps:          0       4       0
  2045 ;;      Totals:         0      16       0
  2046 ;;Total ram usage:       16 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    1
  2049 ;; This function calls:
  2050 ;;		___ftpack
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function ___ftdiv
  2058  06A3                     ___ftdiv:	
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2062  06A3  0020               	movlb	0	; select bank0
  2063  06A4  0827               	movf	___ftdiv@f1,w
  2064  06A5  00AA               	movwf	??___ftdiv
  2065  06A6  0828               	movf	___ftdiv@f1+1,w
  2066  06A7  00AB               	movwf	??___ftdiv+1
  2067  06A8  0829               	movf	___ftdiv@f1+2,w
  2068  06A9  00AC               	movwf	??___ftdiv+2
  2069  06AA  1003               	clrc
  2070  06AB  0D2B               	rlf	??___ftdiv+1,w
  2071  06AC  0D2C               	rlf	??___ftdiv+2,w
  2072  06AD  00AD               	movwf	??___ftdiv+3
  2073  06AE  082D               	movf	??___ftdiv+3,w
  2074  06AF  00B2               	movwf	___ftdiv@exp
  2075  06B0  0832               	movf	___ftdiv@exp,w
  2076  06B1  1D03               	btfss	3,2
  2077  06B2  2EBA               	goto	l1024
  2078  06B3  3000               	movlw	0
  2079  06B4  00A4               	movwf	?___ftdiv
  2080  06B5  3000               	movlw	0
  2081  06B6  00A5               	movwf	?___ftdiv+1
  2082  06B7  3000               	movlw	0
  2083  06B8  00A6               	movwf	?___ftdiv+2
  2084  06B9  0008               	return
  2085  06BA                     l1024:	
  2086  06BA  0824               	movf	___ftdiv@f2,w
  2087  06BB  00AA               	movwf	??___ftdiv
  2088  06BC  0825               	movf	___ftdiv@f2+1,w
  2089  06BD  00AB               	movwf	??___ftdiv+1
  2090  06BE  0826               	movf	___ftdiv@f2+2,w
  2091  06BF  00AC               	movwf	??___ftdiv+2
  2092  06C0  1003               	clrc
  2093  06C1  0D2B               	rlf	??___ftdiv+1,w
  2094  06C2  0D2C               	rlf	??___ftdiv+2,w
  2095  06C3  00AD               	movwf	??___ftdiv+3
  2096  06C4  082D               	movf	??___ftdiv+3,w
  2097  06C5  00B3               	movwf	___ftdiv@sign
  2098  06C6  0833               	movf	___ftdiv@sign,w
  2099  06C7  1D03               	btfss	3,2
  2100  06C8  2ED0               	goto	l1030
  2101  06C9  3000               	movlw	0
  2102  06CA  00A4               	movwf	?___ftdiv
  2103  06CB  3000               	movlw	0
  2104  06CC  00A5               	movwf	?___ftdiv+1
  2105  06CD  3000               	movlw	0
  2106  06CE  00A6               	movwf	?___ftdiv+2
  2107  06CF  0008               	return
  2108  06D0                     l1030:	
  2109  06D0  3000               	movlw	0
  2110  06D1  00AF               	movwf	___ftdiv@f3
  2111  06D2  3000               	movlw	0
  2112  06D3  00B0               	movwf	___ftdiv@f3+1
  2113  06D4  3000               	movlw	0
  2114  06D5  00B1               	movwf	___ftdiv@f3+2
  2115  06D6  3089               	movlw	137
  2116  06D7  0733               	addwf	___ftdiv@sign,w
  2117  06D8  00AA               	movwf	??___ftdiv
  2118  06D9  082A               	movf	??___ftdiv,w
  2119  06DA  02B2               	subwf	___ftdiv@exp,f
  2120  06DB  0827               	movf	___ftdiv@f1,w
  2121  06DC  00AA               	movwf	??___ftdiv
  2122  06DD  0828               	movf	___ftdiv@f1+1,w
  2123  06DE  00AB               	movwf	??___ftdiv+1
  2124  06DF  0829               	movf	___ftdiv@f1+2,w
  2125  06E0  00AC               	movwf	??___ftdiv+2
  2126  06E1  3010               	movlw	16
  2127  06E2                     u665:	
  2128  06E2  36AC               	lsrf	??___ftdiv+2,f
  2129  06E3  0CAB               	rrf	??___ftdiv+1,f
  2130  06E4  0CAA               	rrf	??___ftdiv,f
  2131  06E5  0B89               	decfsz	9,f
  2132  06E6  2EE2               	goto	u665
  2133  06E7  082A               	movf	??___ftdiv,w
  2134  06E8  00AD               	movwf	??___ftdiv+3
  2135  06E9  082D               	movf	??___ftdiv+3,w
  2136  06EA  00B3               	movwf	___ftdiv@sign
  2137  06EB  0824               	movf	___ftdiv@f2,w
  2138  06EC  00AA               	movwf	??___ftdiv
  2139  06ED  0825               	movf	___ftdiv@f2+1,w
  2140  06EE  00AB               	movwf	??___ftdiv+1
  2141  06EF  0826               	movf	___ftdiv@f2+2,w
  2142  06F0  00AC               	movwf	??___ftdiv+2
  2143  06F1  3010               	movlw	16
  2144  06F2                     u675:	
  2145  06F2  36AC               	lsrf	??___ftdiv+2,f
  2146  06F3  0CAB               	rrf	??___ftdiv+1,f
  2147  06F4  0CAA               	rrf	??___ftdiv,f
  2148  06F5  0B89               	decfsz	9,f
  2149  06F6  2EF2               	goto	u675
  2150  06F7  082A               	movf	??___ftdiv,w
  2151  06F8  00AD               	movwf	??___ftdiv+3
  2152  06F9  082D               	movf	??___ftdiv+3,w
  2153  06FA  06B3               	xorwf	___ftdiv@sign,f
  2154  06FB  3080               	movlw	128
  2155  06FC  00AA               	movwf	??___ftdiv
  2156  06FD  082A               	movf	??___ftdiv,w
  2157  06FE  05B3               	andwf	___ftdiv@sign,f
  2158  06FF  17A8               	bsf	___ftdiv@f1+1,7
  2159  0700  30FF               	movlw	255
  2160  0701  05A7               	andwf	___ftdiv@f1,f
  2161  0702  30FF               	movlw	255
  2162  0703  05A8               	andwf	___ftdiv@f1+1,f
  2163  0704  3000               	movlw	0
  2164  0705  05A9               	andwf	___ftdiv@f1+2,f
  2165  0706  17A5               	bsf	___ftdiv@f2+1,7
  2166  0707  30FF               	movlw	255
  2167  0708  05A4               	andwf	___ftdiv@f2,f
  2168  0709  30FF               	movlw	255
  2169  070A  05A5               	andwf	___ftdiv@f2+1,f
  2170  070B  3000               	movlw	0
  2171  070C  05A6               	andwf	___ftdiv@f2+2,f
  2172  070D  3018               	movlw	24
  2173  070E  00AA               	movwf	??___ftdiv
  2174  070F  082A               	movf	??___ftdiv,w
  2175  0710  00AE               	movwf	___ftdiv@cntr
  2176  0711                     l1044:	
  2177  0711  3001               	movlw	1
  2178  0712                     u685:	
  2179  0712  35AF               	lslf	___ftdiv@f3,f
  2180  0713  0DB0               	rlf	___ftdiv@f3+1,f
  2181  0714  0DB1               	rlf	___ftdiv@f3+2,f
  2182  0715  0B89               	decfsz	9,f
  2183  0716  2F12               	goto	u685
  2184  0717  0826               	movf	___ftdiv@f2+2,w
  2185  0718  0229               	subwf	___ftdiv@f1+2,w
  2186  0719  1D03               	skipz
  2187  071A  2F21               	goto	u695
  2188  071B  0825               	movf	___ftdiv@f2+1,w
  2189  071C  0228               	subwf	___ftdiv@f1+1,w
  2190  071D  1D03               	skipz
  2191  071E  2F21               	goto	u695
  2192  071F  0824               	movf	___ftdiv@f2,w
  2193  0720  0227               	subwf	___ftdiv@f1,w
  2194  0721                     u695:	
  2195  0721  1C03               	skipc
  2196  0722  2F2A               	goto	l1052
  2197  0723  0824               	movf	___ftdiv@f2,w
  2198  0724  02A7               	subwf	___ftdiv@f1,f
  2199  0725  0825               	movf	___ftdiv@f2+1,w
  2200  0726  3BA8               	subwfb	___ftdiv@f1+1,f
  2201  0727  0826               	movf	___ftdiv@f2+2,w
  2202  0728  3BA9               	subwfb	___ftdiv@f1+2,f
  2203  0729  142F               	bsf	___ftdiv@f3,0
  2204  072A                     l1052:	
  2205  072A  3001               	movlw	1
  2206  072B                     u705:	
  2207  072B  35A7               	lslf	___ftdiv@f1,f
  2208  072C  0DA8               	rlf	___ftdiv@f1+1,f
  2209  072D  0DA9               	rlf	___ftdiv@f1+2,f
  2210  072E  0B89               	decfsz	9,f
  2211  072F  2F2B               	goto	u705
  2212  0730  3001               	movlw	1
  2213  0731  02AE               	subwf	___ftdiv@cntr,f
  2214  0732  1D03               	btfss	3,2
  2215  0733  2F11               	goto	l1044
  2216  0734  082F               	movf	___ftdiv@f3,w
  2217  0735  00F0               	movwf	___ftpack@arg
  2218  0736  0830               	movf	___ftdiv@f3+1,w
  2219  0737  00F1               	movwf	___ftpack@arg+1
  2220  0738  0831               	movf	___ftdiv@f3+2,w
  2221  0739  00F2               	movwf	___ftpack@arg+2
  2222  073A  0832               	movf	___ftdiv@exp,w
  2223  073B  00AA               	movwf	??___ftdiv
  2224  073C  082A               	movf	??___ftdiv,w
  2225  073D  00F3               	movwf	___ftpack@exp
  2226  073E  0833               	movf	___ftdiv@sign,w
  2227  073F  00AB               	movwf	??___ftdiv+1
  2228  0740  082B               	movf	??___ftdiv+1,w
  2229  0741  00F4               	movwf	___ftpack@sign
  2230  0742  25B8               	fcall	___ftpack
  2231  0743  0870               	movf	?___ftpack,w
  2232  0744  0020               	movlb	0	; select bank0
  2233  0745  00A4               	movwf	?___ftdiv
  2234  0746  0871               	movf	?___ftpack+1,w
  2235  0747  00A5               	movwf	?___ftdiv+1
  2236  0748  0872               	movf	?___ftpack+2,w
  2237  0749  00A6               	movwf	?___ftdiv+2
  2238  074A  0008               	return
  2239  074B                     __end_of___ftdiv:	
  2240                           
  2241                           	psect	text12
  2242  05B8                     __ptext12:	
  2243 ;; *************** function ___ftpack *****************
  2244 ;; Defined at:
  2245 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  arg             3    0[COMMON] unsigned um
  2248 ;;  exp             1    3[COMMON] unsigned char 
  2249 ;;  sign            1    4[COMMON] unsigned char 
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  3    0[COMMON] float 
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1
  2261 ;;      Params:         5       0       0
  2262 ;;      Locals:         0       0       0
  2263 ;;      Temps:          3       0       0
  2264 ;;      Totals:         8       0       0
  2265 ;;Total ram usage:        8 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		___ftdiv
  2271 ;;		___ftmul
  2272 ;;		___lbtoft
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function ___ftpack
  2278  05B8                     ___ftpack:	
  2279                           
  2280                           ;incstack = 0
  2281                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2282  05B8  0873               	movf	___ftpack@exp,w
  2283  05B9  1903               	btfsc	3,2
  2284  05BA  2DC0               	goto	l914
  2285  05BB  0872               	movf	___ftpack@arg+2,w
  2286  05BC  0471               	iorwf	___ftpack@arg+1,w
  2287  05BD  0470               	iorwf	___ftpack@arg,w
  2288  05BE  1D03               	skipz
  2289  05BF  2DD1               	goto	l920
  2290  05C0                     l914:	
  2291  05C0  3000               	movlw	0
  2292  05C1  00F0               	movwf	?___ftpack
  2293  05C2  3000               	movlw	0
  2294  05C3  00F1               	movwf	?___ftpack+1
  2295  05C4  3000               	movlw	0
  2296  05C5  00F2               	movwf	?___ftpack+2
  2297  05C6  0008               	return
  2298  05C7                     l918:	
  2299  05C7  3001               	movlw	1
  2300  05C8  00F5               	movwf	??___ftpack
  2301  05C9  0875               	movf	??___ftpack,w
  2302  05CA  07F3               	addwf	___ftpack@exp,f
  2303  05CB  3001               	movlw	1
  2304  05CC                     u535:	
  2305  05CC  36F2               	lsrf	___ftpack@arg+2,f
  2306  05CD  0CF1               	rrf	___ftpack@arg+1,f
  2307  05CE  0CF0               	rrf	___ftpack@arg,f
  2308  05CF  0B89               	decfsz	9,f
  2309  05D0  2DCC               	goto	u535
  2310  05D1                     l920:	
  2311  05D1  30FE               	movlw	254
  2312  05D2  0572               	andwf	___ftpack@arg+2,w
  2313  05D3  1903               	btfsc	3,2
  2314  05D4  2DEA               	goto	l329
  2315  05D5  2DC7               	goto	l918
  2316  05D6                     l922:	
  2317  05D6  3001               	movlw	1
  2318  05D7  00F5               	movwf	??___ftpack
  2319  05D8  0875               	movf	??___ftpack,w
  2320  05D9  07F3               	addwf	___ftpack@exp,f
  2321  05DA  3001               	movlw	1
  2322  05DB  07F0               	addwf	___ftpack@arg,f
  2323  05DC  3000               	movlw	0
  2324  05DD  1803               	skipnc
  2325  05DE  3001               	movlw	1
  2326  05DF  07F1               	addwf	___ftpack@arg+1,f
  2327  05E0  3000               	movlw	0
  2328  05E1  1803               	skipnc
  2329  05E2  3001               	movlw	1
  2330  05E3  07F2               	addwf	___ftpack@arg+2,f
  2331  05E4  3001               	movlw	1
  2332  05E5                     u555:	
  2333  05E5  36F2               	lsrf	___ftpack@arg+2,f
  2334  05E6  0CF1               	rrf	___ftpack@arg+1,f
  2335  05E7  0CF0               	rrf	___ftpack@arg,f
  2336  05E8  0B89               	decfsz	9,f
  2337  05E9  2DE5               	goto	u555
  2338  05EA                     l329:	
  2339  05EA  30FF               	movlw	255
  2340  05EB  0572               	andwf	___ftpack@arg+2,w
  2341  05EC  1903               	btfsc	3,2
  2342  05ED  2DF7               	goto	l930
  2343  05EE  2DD6               	goto	l922
  2344  05EF                     l928:	
  2345  05EF  3001               	movlw	1
  2346  05F0  02F3               	subwf	___ftpack@exp,f
  2347  05F1  3001               	movlw	1
  2348  05F2                     u575:	
  2349  05F2  35F0               	lslf	___ftpack@arg,f
  2350  05F3  0DF1               	rlf	___ftpack@arg+1,f
  2351  05F4  0DF2               	rlf	___ftpack@arg+2,f
  2352  05F5  0B89               	decfsz	9,f
  2353  05F6  2DF2               	goto	u575
  2354  05F7                     l930:	
  2355  05F7  1BF1               	btfsc	___ftpack@arg+1,7
  2356  05F8  2DFD               	goto	l336
  2357  05F9  3002               	movlw	2
  2358  05FA  0273               	subwf	___ftpack@exp,w
  2359  05FB  1803               	skipnc
  2360  05FC  2DEF               	goto	l928
  2361  05FD                     l336:	
  2362  05FD  1873               	btfsc	___ftpack@exp,0
  2363  05FE  2E05               	goto	l337
  2364  05FF  30FF               	movlw	255
  2365  0600  05F0               	andwf	___ftpack@arg,f
  2366  0601  307F               	movlw	127
  2367  0602  05F1               	andwf	___ftpack@arg+1,f
  2368  0603  30FF               	movlw	255
  2369  0604  05F2               	andwf	___ftpack@arg+2,f
  2370  0605                     l337:	
  2371  0605  1003               	clrc
  2372  0606  0CF3               	rrf	___ftpack@exp,f
  2373  0607  0873               	movf	___ftpack@exp,w
  2374  0608  00F5               	movwf	??___ftpack
  2375  0609  01F6               	clrf	??___ftpack+1
  2376  060A  01F7               	clrf	??___ftpack+2
  2377  060B  3010               	movlw	16
  2378  060C                     u615:	
  2379  060C  35F5               	lslf	??___ftpack,f
  2380  060D  0DF6               	rlf	??___ftpack+1,f
  2381  060E  0DF7               	rlf	??___ftpack+2,f
  2382  060F  0B89               	decfsz	9,f
  2383  0610  2E0C               	goto	u615
  2384  0611  0875               	movf	??___ftpack,w
  2385  0612  04F0               	iorwf	___ftpack@arg,f
  2386  0613  0876               	movf	??___ftpack+1,w
  2387  0614  04F1               	iorwf	___ftpack@arg+1,f
  2388  0615  0877               	movf	??___ftpack+2,w
  2389  0616  04F2               	iorwf	___ftpack@arg+2,f
  2390  0617  0874               	movf	___ftpack@sign,w
  2391  0618  1903               	btfsc	3,2
  2392  0619  0008               	return
  2393  061A  17F2               	bsf	___ftpack@arg+2,7
  2394  061B  0008               	return
  2395  061C                     __end_of___ftpack:	
  2396                           
  2397                           	psect	text13
  2398  0476                     __ptext13:	
  2399 ;; *************** function _SPI_init *****************
  2400 ;; Defined at:
  2401 ;;		line 35 in file "spi.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1
  2415 ;;      Params:         0       0       0
  2416 ;;      Locals:         0       0       0
  2417 ;;      Temps:          0       0       0
  2418 ;;      Totals:         0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; Hardware stack levels required when called:    1
  2422 ;; This function calls:
  2423 ;;		_configIO
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _SPI_init
  2431  0476                     _SPI_init:	
  2432                           
  2433                           ;spi.c: 36: SSP1CON1bits.SSPEN = 0;
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in _SPI_init: [wreg+status,2+status,0+pclath+cstack]
  2437  0476  0024               	movlb	4	; select bank4
  2438  0477  1295               	bcf	21,5	;volatile
  2439                           
  2440                           ;spi.c: 37: configIO();
  2441  0478  24A3               	fcall	_configIO
  2442                           
  2443                           ;spi.c: 38: SSP1CON1bits.CKP = 0;
  2444  0479  0024               	movlb	4	; select bank4
  2445  047A  1215               	bcf	21,4	;volatile
  2446                           
  2447                           ;spi.c: 39: SSP1STATbits.CKE = 1;
  2448  047B  1714               	bsf	20,6	;volatile
  2449                           
  2450                           ;spi.c: 40: SSP1STATbits.SMP = 0;
  2451  047C  1394               	bcf	20,7	;volatile
  2452                           
  2453                           ;spi.c: 41: SSP1CON1bits.SSPM = 0b0000;
  2454  047D  30F0               	movlw	-16
  2455  047E  0595               	andwf	21,f	;volatile
  2456                           
  2457                           ;spi.c: 42: PIR1bits.SSP1IF = 0;
  2458  047F  0020               	movlb	0	; select bank0
  2459  0480  1191               	bcf	17,3	;volatile
  2460                           
  2461                           ;spi.c: 43: SSP1CON1bits.SSPEN = 1;
  2462  0481  0024               	movlb	4	; select bank4
  2463  0482  1695               	bsf	21,5	;volatile
  2464  0483  0008               	return
  2465  0484                     __end_of_SPI_init:	
  2466                           
  2467                           	psect	text14
  2468  04A3                     __ptext14:	
  2469 ;; *************** function _configIO *****************
  2470 ;; Defined at:
  2471 ;;		line 19 in file "spi.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;		None
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1
  2485 ;;      Params:         0       0       0
  2486 ;;      Locals:         0       0       0
  2487 ;;      Temps:          0       0       0
  2488 ;;      Totals:         0       0       0
  2489 ;;Total ram usage:        0 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_SPI_init
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _configIO
  2500  04A3                     _configIO:	
  2501                           
  2502                           ;spi.c: 20: TRISCbits.TRISC3 = 0;
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _configIO: [wreg+status,2]
  2506  04A3  0021               	movlb	1	; select bank1
  2507  04A4  118E               	bcf	14,3	;volatile
  2508                           
  2509                           ;spi.c: 21: TRISCbits.TRISC0 = 0;
  2510  04A5  100E               	bcf	14,0	;volatile
  2511                           
  2512                           ;spi.c: 22: TRISCbits.TRISC2 = 0;
  2513  04A6  110E               	bcf	14,2	;volatile
  2514                           
  2515                           ;spi.c: 23: TRISCbits.TRISC1 = 1;
  2516  04A7  148E               	bsf	14,1	;volatile
  2517                           
  2518                           ;spi.c: 24: TRISAbits.TRISA5 = 1;
  2519  04A8  168C               	bsf	12,5	;volatile
  2520                           
  2521                           ;spi.c: 25: TRISAbits.TRISA1 = 0;
  2522  04A9  108C               	bcf	12,1	;volatile
  2523                           
  2524                           ;spi.c: 26: TRISCbits.TRISC4 = 0;
  2525  04AA  120E               	bcf	14,4	;volatile
  2526                           
  2527                           ;spi.c: 27: TRISAbits.TRISA2 = 1;
  2528  04AB  150C               	bsf	12,2	;volatile
  2529                           
  2530                           ;spi.c: 28: OPTION_REGbits.nWPUEN = 0;
  2531  04AC  1395               	bcf	21,7	;volatile
  2532                           
  2533                           ;spi.c: 29: WPUAbits.WPUA5 = 1;
  2534  04AD  0024               	movlb	4	; select bank4
  2535  04AE  168C               	bsf	12,5	;volatile
  2536                           
  2537                           ;spi.c: 30: WPUAbits.WPUA2 = 1;
  2538  04AF  150C               	bsf	12,2	;volatile
  2539                           
  2540                           ;spi.c: 31: APFCON = 0b00010000;
  2541  04B0  3010               	movlw	16
  2542  04B1  0022               	movlb	2	; select bank2
  2543  04B2  009D               	movwf	29	;volatile
  2544                           
  2545                           ;spi.c: 32: ANSELA = 0x00;
  2546  04B3  0023               	movlb	3	; select bank3
  2547  04B4  018C               	clrf	12	;volatile
  2548                           
  2549                           ;spi.c: 33: ANSELC = 0x00;
  2550  04B5  018E               	clrf	14	;volatile
  2551  04B6  0008               	return
  2552  04B7                     __end_of_configIO:	
  2553  007E                     btemp	set	126	;btemp
  2554  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     53      53
    BANK1            32      0       0

Pointer List with Targets:

    SPI_writeArray@data	PTR unsigned char  size(1) Largest target is 2
		 -> configureRX@write(COMMON[2]), resetIRQ@write(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->___lbtoft
    _main->_configureRX
    _main->_resetIRQ
    _resetIRQ->_SPI_writeArray
    _readData->_SPI_write_byte
    _configureRX->_SPI_writeArray
    _SPI_writeArray->_SPI_write_byte
    _configLEDTimer->_setDutyCycle
    ___lbtoft->___ftpack
    ___fttol->___lbtoft
    ___ftmul->___lbtoft
    ___ftdiv->___lbtoft

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lbtoft

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8212
                                             12 COMMON     1     1      0
                                             50 BANK0      3     3      0
                           _SPI_init
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                     _configLEDTimer
                        _configureRX
                           _readData
                           _resetIRQ
                       _setDutyCycle
 ---------------------------------------------------------------------------------
 (1) _resetIRQ                                             3     3      0     670
                                              9 COMMON     3     3      0
                     _SPI_writeArray
 ---------------------------------------------------------------------------------
 (1) _readData                                             2     2      0      68
                                              3 COMMON     2     2      0
                     _SPI_write_byte
 ---------------------------------------------------------------------------------
 (1) _configureRX                                          3     3      0     858
                                              9 COMMON     3     3      0
                     _SPI_writeArray
 ---------------------------------------------------------------------------------
 (2) _SPI_writeArray                                       6     5      1     622
                                              3 COMMON     6     5      1
                     _SPI_write_byte
 ---------------------------------------------------------------------------------
 (3) _SPI_write_byte                                       3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _configLEDTimer                                       2     0      2     248
                                              6 COMMON     2     0      2
                       _setDutyCycle
 ---------------------------------------------------------------------------------
 (1) _setDutyCycle                                         6     4      2     173
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1690
                                              8 COMMON     4     1      3
                                              0 BANK0      4     4      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     305
                                             36 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6    2100
                                             20 BANK0     16    10      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                              4 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _SPI_init                                             0     0      0       0
                           _configIO
 ---------------------------------------------------------------------------------
 (2) _configIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_init
     _configIO
   ___ftdiv
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___ftmul
     ___ftdiv (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   _configLEDTimer
     _setDutyCycle
   _configureRX
     _SPI_writeArray
       _SPI_write_byte
   _readData
     _SPI_write_byte
   _resetIRQ
     _SPI_writeArray
       _SPI_write_byte
   _setDutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     35      35       6       66.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri May 19 03:00:47 2017

           ?_configureRX 0070              __CFG_CP$OFF 0000                       l72 0497  
                     l80 0515                      l135 0521                      l420 0689  
                    l158 04DC                      l336 05FD                      l337 0605  
                    l329 05EA                      l902 0501                      l920 05D1  
                    l930 05F7                      l922 05D6                      l914 05C0  
                    l918 05C7                      l928 05EF                      _PR2 001B  
                    u615 060C                      u535 05CC                      u705 072B  
                    u555 05E5                      u575 05F2                      u815 07D8  
                    u665 06E2                      u825 07DE                      u745 0784  
                    u675 06F2                      u755 0794                      u915 0681  
                    u685 0712                      u695 0721                      u775 07BC  
                    u855 063C                      u785 07C2                      u885 0666  
                    u957 0563                      u967 056D             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000             ___ftdiv@cntr 002E  
           ___ftdiv@sign 0033                     l1100 07D7                     l1030 06D0  
                   l1024 06BA                     l1052 072A                     l1044 0711  
                   l1116 0635                     l1142 0680                     l1134 0665  
                   l1072 0778                     l1144 068C                     l1136 0673  
                   l1066 0762                     l1170 051F                     l1084 07B3  
                   l1148 069A                     l1096 07CF                     l1088 07BB  
           __CFG_WRT$OFF 0000                     _main 0518             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     fsr0h 0005                     fsr1h 0007  
                   indf0 0000                     fsr0l 0004                     indf1 0001  
                   fsr1l 0006                     btemp 007E                     start 0001  
        __end_of_TX_ADDR 0476          __end_of_RX_PW_P 046F            __CFG_MCLRE$ON 0000  
           ___ftmul@cntr 0042             ___ftmul@sign 0043             ___fttol@exp1 0051  
           ___fttol@lval 004D                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 074B          __end_of___ftmul 07FE                    _T1CON 0018  
        __end_of___fttol 06A3                    _T2CON 001C                    _TMR1H 0017  
                  _TMR1L 0016            ___ftpack@sign 0074           __CFG_BOREN$OFF 0000  
       __end_of_SPI_init 0484                    status 0003                    wtemp0 007E  
       ??_configLEDTimer 0078          __initialization 07FE             __end_of_main 055E  
       configLEDTimer@dc 0076           __CFG_LPBOR$OFF 0000                   ??_main 007C  
          ___fttol@sign1 004C              readData@ret 0074                   _APFCON 011D  
                 _ANSELA 018C                   _ANSELC 018E         __end_of___ftpack 061C  
       __end_of___lbtoft 04FD                   _OSCCON 0099           __CFG_PWRTE$OFF 0000  
       __end_of_configIO 04B7  __size_of_SPI_writeArray 001B           __CFG_STVREN$ON 0000  
              ??___ftdiv 002A                ??___ftmul 003A                ??___fttol 0048  
__size_of_SPI_write_byte 0010         __end_of_readData 0469     __size_of_configureRX 005A  
                 main@dc 0052    ___ftmul@f3_as_product 003F         __end_of_resetIRQ 0493  
      __end_of_RX_ADDR_P 0475  __end_of__initialization 07FE               ___ftdiv@f1 0027  
             ___ftdiv@f2 0024               ___ftdiv@f3 002F               ___lbtoft@c 007B  
             ___ftmul@f1 0034               ___ftmul@f2 0037               ___fttol@f1 0044  
         __pcstackCOMMON 0070                ?_SPI_init 0070       setDutyCycle@masked 0074  
         _OPTION_REGbits 0095         configureRX@write 007A            ?_setDutyCycle 0070  
             __pmaintext 0518                ?___ftpack 0070                ?___lbtoft 0078  
             ??_SPI_init 0070                  _PWM3DCH 0618                  _PWM3DCL 0617  
                _PWM3CON 0619                  _SSP1BUF 0211                ?_configIO 0070  
                _TX_ADDR 0475           ??_setDutyCycle 0072                  _RX_PW_P 0469  
              ?_readData 0070                ?_resetIRQ 0070           _SPI_writeArray 04FD  
         _SPI_write_byte 0493                  ___ftdiv 06A3                  ___ftmul 074B  
                ___fttol 061C               ??___ftpack 0075               ??___lbtoft 0020  
                __ptext1 0484                  __ptext2 045C                  __ptext3 055E  
                __ptext4 04FD                  __ptext5 0493                  __ptext6 04CC  
                __ptext7 04B7                  __ptext8 04E4                  __ptext9 061C  
             ??_configIO 0070     end_of_initialization 07FE               ??_readData 0073  
 __end_of_SPI_writeArray 0518       SPI_writeArray@data 0078               ??_resetIRQ 0079  
 __end_of_SPI_write_byte 04A3             __pstringtext 0469                _PORTAbits 000C  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C                _TRISCbits 008E  
              _RX_ADDR_P 046F              ___ftdiv@exp 0032            resetIRQ@write 007A  
        ?_SPI_writeArray 0073          ?_SPI_write_byte 0070              ___ftmul@exp 003E  
          ??_configureRX 0079  __size_of_configLEDTimer 0018     __end_of_setDutyCycle 04CC  
    start_initialization 07FE        __size_of_SPI_init 000E      __end_of_configureRX 05B8  
      __size_of___ftpack 0064        __size_of___lbtoft 0019                ___latbits 0000  
          __pcstackBANK0 0020        __size_of_configIO 0014        __size_of_readData 000D  
     SPI_write_byte@data 0071        __size_of_resetIRQ 000F                 ?___ftdiv 0024  
               ?___ftmul 0034                 ?___fttol 0044          SPI_writeArray@i 0077  
               _LATAbits 010C                 _LATCbits 010E        SPI_writeArray@ret 0076  
               _PIR1bits 0011              _configureRX 055E    __size_of_setDutyCycle 0015  
         _configLEDTimer 04CC                 _SPI_init 0476   SPI_write_byte@ret_data 0072  
               _WPUAbits 020C         ??_SPI_writeArray 0074         ??_SPI_write_byte 0070  
           _setDutyCycle 04B7   __end_of_configLEDTimer 04E4         __size_of___ftdiv 00A8  
       __size_of___ftmul 00B3         __size_of___fttol 0087                 ___ftpack 05B8  
               ___lbtoft 04E4           setDutyCycle@dc 0070                 __ptext10 074B  
               __ptext11 06A3                 __ptext12 05B8                 __ptext13 0476  
               __ptext14 04A3             _SSP1CON1bits 0215                 _configIO 04A3  
   SPI_writeArray@length 0073                 _readData 045C            __size_of_main 0046  
               _resetIRQ 0484          ?_configLEDTimer 0076                 main@data 0054  
           _SSP1STATbits 0214        __CFG_CLKOUTEN$OFF 0000  
